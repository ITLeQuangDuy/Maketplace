/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Maketplace, MaketplaceInterface } from "../Maketplace";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "CancelledListing",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "NFTSold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "NewListing",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "ERC1155_INTERFACE_ID",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ERC721_INTERFACE_ID",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRecipient",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addrNft",
        type: "address",
      },
      {
        internalType: "address",
        name: "_paymentToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "listing",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "listingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listings",
    outputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextListingId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "percentFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_listingId",
        type: "uint256",
      },
    ],
    name: "purchaseNFT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "rescueStuck",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_listingFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_unListingFee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeRecipient",
        type: "address",
      },
    ],
    name: "setFeeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_percent",
        type: "uint256",
      },
    ],
    name: "setPercentFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_listingId",
        type: "uint256",
      },
    ],
    name: "unListing",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "unListingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a1d806100206000396000f3fe60806040526004361061014b5760003560e01c80636a2a4544116100b6578063bc197c811161006f578063bc197c811461038a578063de74e57b146103b9578063e74b981b14610455578063f23a6e6114610475578063f2fde38b146104a2578063fe7f0c5c146104c257600080fd5b80636a2a454414610306578063715018a6146103195780637176ba2f1461032e5780638129fc1c146103415780638da5cb5b14610356578063aaccf1ec1461037457600080fd5b80634690484011610108578063469048401461024f5780634c1a41151461028757806352f7c9881461029d57806359f4a907146102bd5780635c975abb146102d85780636a1b7ecc146102f057600080fd5b806301ffc9a7146101505780630550102314610196578063150b7a02146101b8578063150bde03146101fd5780632ca069a5146102105780633efae5f81461022b575b600080fd5b34801561015c57600080fd5b5061018161016b366004611566565b6001600160e01b0319166301ffc9a760e01b1490565b60405190151581526020015b60405180910390f35b3480156101a257600080fd5b506101b66101b1366004611597565b6104e2565b005b3480156101c457600080fd5b506101e46101d3366004611615565b630a85bd0160e11b95945050505050565b6040516001600160e01b0319909116815260200161018d565b6101b661020b366004611597565b6104ef565b34801561021c57600080fd5b506101e4636cdb3d1360e11b81565b34801561023757600080fd5b5061024160cc5481565b60405190815260200161018d565b34801561025b57600080fd5b5060ce5461026f906001600160a01b031681565b6040516001600160a01b03909116815260200161018d565b34801561029357600080fd5b5061024160cd5481565b3480156102a957600080fd5b506101b66102b8366004611684565b6106af565b3480156102c957600080fd5b506101e46380ac58cd60e01b81565b3480156102e457600080fd5b5060655460ff16610181565b3480156102fc57600080fd5b5061024160cb5481565b6101b6610314366004611597565b6106c2565b34801561032557600080fd5b506101b6610919565b6101b661033c3660046116a6565b61092d565b34801561034d57600080fd5b506101b6610b78565b34801561036257600080fd5b506033546001600160a01b031661026f565b34801561038057600080fd5b5061024160ca5481565b34801561039657600080fd5b506101e46103a5366004611738565b63bc197c8160e01b98975050505050505050565b3480156103c557600080fd5b506104176103d4366004611597565b60c9602052600090815260409020805460018201546002830154600384015460048501546005909501546001600160a01b03948516959385169490921692909186565b604080516001600160a01b039788168152958716602087015293909516928401929092526060830152608082015260a081019190915260c00161018d565b34801561046157600080fd5b506101b66104703660046117f3565b610c98565b34801561048157600080fd5b506101e461049036600461180e565b63f23a6e6160e01b9695505050505050565b3480156104ae57600080fd5b506101b66104bd3660046117f3565b610cc2565b3480156104ce57600080fd5b506101b66104dd366004611886565b610d38565b6104ea610dc5565b60cd55565b6104f7610e1f565b6104ff610e65565b600081815260c96020908152604091829020825160c08101845281546001600160a01b0390811680835260018401548216948301949094526002830154169381019390935260038101546060840152600481015460808401526005015460a08301526105a35760405162461bcd60e51b815260206004820152600e60248201526d139195081b9bdd081b1a5cdd195960921b60448201526064015b60405180910390fd5b80516001600160a01b03163314156105ee5760405162461bcd60e51b815260206004820152600e60248201526d2cb7ba9030b9329039b2b63632b960911b604482015260640161059a565b61060681602001513383600001518460a00151610ebf565b5061062081604001513033846060015185608001516110f3565b600082815260c96020908152604080832080546001600160a01b0319908116825560018201805482169055600282018054909116905560038101849055600481018490556005019290925581513381529081018490527ff025e0c58bf784c030caa814abce9ca7cf237831d4dff71c2ade33bed4d8dd22910160405180910390a1506106ac6001609755565b50565b6106b7610dc5565b60cb9190915560cc55565b6106ca610e1f565b6106d2610e65565b600081815260c96020908152604091829020825160c08101845281546001600160a01b0390811680835260018401548216948301949094526002830154169381019390935260038101546060840152600481015460808401526005015460a08301526107705760405162461bcd60e51b815260206004820152600d60248201526c24a2103737ba1039b2b63632b960991b604482015260640161059a565b80516001600160a01b031633146107ba5760405162461bcd60e51b815260206004820152600e60248201526d2cb7ba903737ba1039b2b63632b960911b604482015260640161059a565b60cc5434146108035760405162461bcd60e51b8152602060048201526015602482015274496e76616c696420756e6c697374696e672066656560581b604482015260640161059a565b6108208160400151308360000151846060015185608001516110f3565b60ce5460cb546040516000926001600160a01b031691908381818185875af1925050503d806000811461086f576040519150601f19603f3d011682016040523d82523d6000602084013e610874565b606091505b50509050806108955760405162461bcd60e51b815260040161059a906118b0565b6040518381527f2744ae55a8e75826dddb5008225144c5511db28443db592f09b9e2d899ce6a149060200160405180910390a15050600081815260c96020526040812080546001600160a01b031990811682556001820180548216905560028201805490911690556003810182905560048101829055600501556106ac6001609755565b610921610dc5565b61092b6000611377565b565b610935610e1f565b61093d610e65565b60cb5434146109845760405162461bcd60e51b8152602060048201526013602482015272496e76616c6964206c697374696e672066656560681b604482015260640161059a565b600082116109d45760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604482015260640161059a565b60ca805490819060006109e683611907565b90915550506040805160c081018252338082526001600160a01b0388811660208085019182528b8316858701908152606086018b8152608087018b815260a088018b815260008b815260c990955298909320965187549086166001600160a01b031991821617885593516001880180549187169186169190911790559051600287018054919095169316929092179092555160038401555160048301559151600590910155610a999087903087876110f3565b60ce5460cb546040516000926001600160a01b031691908381818185875af1925050503d8060008114610ae8576040519150601f19603f3d011682016040523d82523d6000602084013e610aed565b606091505b5050905080610b0e5760405162461bcd60e51b815260040161059a906118b0565b604080513381526001600160a01b038816602082015290810186905260608101859052608081018490527fbe7d9754861a6bb6c9b999fdc3a45f27cc82cdefdef14a32f8b581ce120011819060a00160405180910390a15050610b716001609755565b5050505050565b600054610100900460ff1615808015610b985750600054600160ff909116105b80610bb25750303b158015610bb2575060005460ff166001145b610c155760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161059a565b6000805460ff191660011790558015610c38576000805461ff0019166101001790555b610c406113c9565b610c486113fc565b610c5061142c565b80156106ac576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b610ca0610dc5565b60ce80546001600160a01b0319166001600160a01b0392909216919091179055565b610cca610dc5565b6001600160a01b038116610d2f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161059a565b6106ac81611377565b610d40610dc5565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb90604401602060405180830381600087803b158015610d8857600080fd5b505af1158015610d9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc09190611922565b505050565b6033546001600160a01b0316331461092b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161059a565b60655460ff161561092b5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161059a565b60026097541415610eb85760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161059a565b6002609755565b60006001600160a01b0385166110955781341015610f175760405162461bcd60e51b8152602060048201526015602482015274139bdd08195b9bdd59da08115d1a195c881cd95b9d605a1b604482015260640161059a565b6000606460cd5484610f299190611944565b610f339190611963565b90506000610f418285611985565b60ce546040519192506000916001600160a01b039091169084908381818185875af1925050503d8060008114610f93576040519150601f19603f3d011682016040523d82523d6000602084013e610f98565b606091505b5050905080610fe95760405162461bcd60e51b815260206004820152601c60248201527f4661696c656420746f2073656e6420457468657220666f722066656500000000604482015260640161059a565b6000866001600160a01b03168360405160006040518083038185875af1925050503d8060008114611036576040519150601f19603f3d011682016040523d82523d6000602084013e61103b565b606091505b505090508061108c5760405162461bcd60e51b815260206004820152601e60248201527f4661696c656420746f2073656e6420457468657220746f2073656c6c65720000604482015260640161059a565b505050506110eb565b6000606460cd54846110a79190611944565b6110b19190611963565b905060006110bf8285611985565b60ce549091506110dc90889088906001600160a01b031685611453565b6110e887878784611453565b50505b509392505050565b600081116111305760405162461bcd60e51b815260206004820152600a6024820152690416d6f756e74203e20360b41b604482015260640161059a565b6040516301ffc9a760e01b81526380ac58cd60e01b60048201526001600160a01b038616906301ffc9a79060240160206040518083038186803b15801561117657600080fd5b505afa15801561118a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ae9190611922565b1561126757806001146111f85760405162461bcd60e51b8152602060048201526012602482015271416d6f756e7420657263373231203d3d203160701b604482015260640161059a565b604051632142170760e11b81526001600160a01b0385811660048301528481166024830152604482018490528616906342842e0e90606401600060405180830381600087803b15801561124a57600080fd5b505af115801561125e573d6000803e3d6000fd5b50505050610b71565b6040516301ffc9a760e01b8152636cdb3d1360e11b60048201526001600160a01b038616906301ffc9a79060240160206040518083038186803b1580156112ad57600080fd5b505afa1580156112c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e59190611922565b15610b7157604051637921219560e11b81526001600160a01b0385811660048301528481166024830152604482018490526064820183905260a06084830152600060a483015286169063f242432a9060c401600060405180830381600087803b15801561135157600080fd5b505af1158015611365573d6000803e3d6000fd5b505050505050505050565b6001609755565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166113f05760405162461bcd60e51b815260040161059a9061199c565b6065805460ff19169055565b600054610100900460ff166114235760405162461bcd60e51b815260040161059a9061199c565b61092b33611377565b600054610100900460ff166113705760405162461bcd60e51b815260040161059a9061199c565b600081116114905760405162461bcd60e51b815260206004820152600a6024820152690416d6f756e74203e20360b41b604482015260640161059a565b6040516323b872dd60e01b81526001600160a01b038481166004830152838116602483015260448201839052600091908616906323b872dd90606401602060405180830381600087803b1580156114e657600080fd5b505af11580156114fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151e9190611922565b905080610b715760405162461bcd60e51b8152602060048201526016602482015275115490cb4c8c081d1c985b9cd9995c8819985a5b195960521b604482015260640161059a565b60006020828403121561157857600080fd5b81356001600160e01b03198116811461159057600080fd5b9392505050565b6000602082840312156115a957600080fd5b5035919050565b80356001600160a01b03811681146115c757600080fd5b919050565b60008083601f8401126115de57600080fd5b50813567ffffffffffffffff8111156115f657600080fd5b60208301915083602082850101111561160e57600080fd5b9250929050565b60008060008060006080868803121561162d57600080fd5b611636866115b0565b9450611644602087016115b0565b935060408601359250606086013567ffffffffffffffff81111561166757600080fd5b611673888289016115cc565b969995985093965092949392505050565b6000806040838503121561169757600080fd5b50508035926020909101359150565b600080600080600060a086880312156116be57600080fd5b6116c7866115b0565b94506116d5602087016115b0565b94979496505050506040830135926060810135926080909101359150565b60008083601f84011261170557600080fd5b50813567ffffffffffffffff81111561171d57600080fd5b6020830191508360208260051b850101111561160e57600080fd5b60008060008060008060008060a0898b03121561175457600080fd5b61175d896115b0565b975061176b60208a016115b0565b9650604089013567ffffffffffffffff8082111561178857600080fd5b6117948c838d016116f3565b909850965060608b01359150808211156117ad57600080fd5b6117b98c838d016116f3565b909650945060808b01359150808211156117d257600080fd5b506117df8b828c016115cc565b999c989b5096995094979396929594505050565b60006020828403121561180557600080fd5b611590826115b0565b60008060008060008060a0878903121561182757600080fd5b611830876115b0565b955061183e602088016115b0565b94506040870135935060608701359250608087013567ffffffffffffffff81111561186857600080fd5b61187489828a016115cc565b979a9699509497509295939492505050565b6000806040838503121561189957600080fd5b6118a2836115b0565b946020939093013593505050565b60208082526021908201527f4661696c656420746f2073656e6420457468657220746f20726563697069656e6040820152601d60fa1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600060001982141561191b5761191b6118f1565b5060010190565b60006020828403121561193457600080fd5b8151801515811461159057600080fd5b600081600019048311821515161561195e5761195e6118f1565b500290565b60008261198057634e487b7160e01b600052601260045260246000fd5b500490565b600082821015611997576119976118f1565b500390565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea2646970667358221220a46db5cccb00bb32e9561db2a30d4b3d2635a14caff02dffeaaee031b73dcab964736f6c63430008090033";

export class Maketplace__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Maketplace> {
    return super.deploy(overrides || {}) as Promise<Maketplace>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Maketplace {
    return super.attach(address) as Maketplace;
  }
  connect(signer: Signer): Maketplace__factory {
    return super.connect(signer) as Maketplace__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MaketplaceInterface {
    return new utils.Interface(_abi) as MaketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Maketplace {
    return new Contract(address, _abi, signerOrProvider) as Maketplace;
  }
}
