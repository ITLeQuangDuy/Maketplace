/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TokenERC721, TokenERC721Interface } from "../TokenERC721";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600a8152694c655175616e6744757960b01b60208083019182528351808501909452600384526213145160ea1b9084015281519192916200005f91600091620000f3565b50805162000075906001906020840190620000f3565b505050620000926200008c6200009d60201b60201c565b620000a1565b6001600755620001d6565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001019062000199565b90600052602060002090601f01602090048101928262000125576000855562000170565b82601f106200014057805160ff191683800117855562000170565b8280016001018555821562000170579182015b828111156200017057825182559160200191906001019062000153565b506200017e92915062000182565b5090565b5b808211156200017e576000815560010162000183565b600181811c90821680620001ae57607f821691505b60208210811415620001d057634e487b7160e01b600052602260045260246000fd5b50919050565b61165d80620001e66000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063a22cb46511610071578063a22cb4651461024d578063b88d4fde14610260578063c87b56dd14610273578063e985e9c514610286578063f2fde38b146102c257600080fd5b806370a0823114610202578063715018a61461022357806375794a3c1461022b5780638da5cb5b1461023457806395d89b411461024557600080fd5b806323b872dd116100f457806323b872dd146101a357806342842e0e146101b657806342966c68146101c95780636352211e146101dc5780636a627842146101ef57600080fd5b806301ffc9a71461012657806306fdde031461014e578063081812fc14610163578063095ea7b31461018e575b600080fd5b610139610134366004611180565b6102d5565b60405190151581526020015b60405180910390f35b610156610327565b60405161014591906111f5565b610176610171366004611208565b6103b9565b6040516001600160a01b039091168152602001610145565b6101a161019c36600461123d565b6103e0565b005b6101a16101b1366004611267565b6104fb565b6101a16101c4366004611267565b61052c565b6101a16101d7366004611208565b610547565b6101766101ea366004611208565b610553565b6101a16101fd3660046112a3565b6105b3565b6102156102103660046112a3565b6105df565b604051908152602001610145565b6101a1610665565b61021560075481565b6006546001600160a01b0316610176565b610156610679565b6101a161025b3660046112be565b610688565b6101a161026e366004611310565b610697565b610156610281366004611208565b6106cf565b6101396102943660046113ec565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101a16102d03660046112a3565b610743565b60006001600160e01b031982166380ac58cd60e01b148061030657506001600160e01b03198216635b5e139f60e01b145b8061032157506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546103369061141f565b80601f01602080910402602001604051908101604052809291908181526020018280546103629061141f565b80156103af5780601f10610384576101008083540402835291602001916103af565b820191906000526020600020905b81548152906001019060200180831161039257829003601f168201915b5050505050905090565b60006103c4826107b9565b506000908152600460205260409020546001600160a01b031690565b60006103eb82610553565b9050806001600160a01b0316836001600160a01b0316141561045e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061047a575061047a8133610294565b6104ec5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610455565b6104f68383610818565b505050565b6105053382610886565b6105215760405162461bcd60e51b81526004016104559061145a565b6104f6838383610905565b6104f683838360405180602001604052806000815250610697565b61055081610a76565b50565b6000818152600260205260408120546001600160a01b0316806103215760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610455565b6105bb610b19565b6105c781600754610b73565b600780549060006105d7836114bd565b919050555050565b60006001600160a01b0382166106495760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610455565b506001600160a01b031660009081526003602052604090205490565b61066d610b19565b6106776000610d0c565b565b6060600180546103369061141f565b610693338383610d5e565b5050565b6106a13383610886565b6106bd5760405162461bcd60e51b81526004016104559061145a565b6106c984848484610e2d565b50505050565b60606106da826107b9565b60006106f160408051602081019091526000815290565b90506000815111610711576040518060200160405280600081525061073c565b8061071b84610e60565b60405160200161072c9291906114d8565b6040516020818303038152906040525b9392505050565b61074b610b19565b6001600160a01b0381166107b05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610455565b61055081610d0c565b6000818152600260205260409020546001600160a01b03166105505760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610455565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061084d82610553565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061089283610553565b9050806001600160a01b0316846001600160a01b031614806108d957506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806108fd5750836001600160a01b03166108f2846103b9565b6001600160a01b0316145b949350505050565b826001600160a01b031661091882610553565b6001600160a01b03161461093e5760405162461bcd60e51b815260040161045590611507565b6001600160a01b0382166109a05760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610455565b6109ad8383836001610efd565b826001600160a01b03166109c082610553565b6001600160a01b0316146109e65760405162461bcd60e51b815260040161045590611507565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000610a8182610553565b9050610a91816000846001610efd565b610a9a82610553565b600083815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6006546001600160a01b031633146106775760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610455565b6001600160a01b038216610bc95760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610455565b6000818152600260205260409020546001600160a01b031615610c2e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610455565b610c3c600083836001610efd565b6000818152600260205260409020546001600160a01b031615610ca15760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610455565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610dc05760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610455565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610e38848484610905565b610e4484848484610f85565b6106c95760405162461bcd60e51b81526004016104559061154c565b60606000610e6d83611092565b600101905060008167ffffffffffffffff811115610e8d57610e8d6112fa565b6040519080825280601f01601f191660200182016040528015610eb7576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610ef057610ef5565b610ec1565b509392505050565b60018111156106c9576001600160a01b03841615610f43576001600160a01b03841660009081526003602052604081208054839290610f3d90849061159e565b90915550505b6001600160a01b038316156106c9576001600160a01b03831660009081526003602052604081208054839290610f7a9084906115b5565b909155505050505050565b60006001600160a01b0384163b1561108757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610fc99033908990889088906004016115cd565b602060405180830381600087803b158015610fe357600080fd5b505af1925050508015611013575060408051601f3d908101601f191682019092526110109181019061160a565b60015b61106d573d808015611041576040519150601f19603f3d011682016040523d82523d6000602084013e611046565b606091505b5080516110655760405162461bcd60e51b81526004016104559061154c565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108fd565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106110d15772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106110fd576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061111b57662386f26fc10000830492506010015b6305f5e1008310611133576305f5e100830492506008015b612710831061114757612710830492506004015b60648310611159576064830492506002015b600a83106103215760010192915050565b6001600160e01b03198116811461055057600080fd5b60006020828403121561119257600080fd5b813561073c8161116a565b60005b838110156111b85781810151838201526020016111a0565b838111156106c95750506000910152565b600081518084526111e181602086016020860161119d565b601f01601f19169290920160200192915050565b60208152600061073c60208301846111c9565b60006020828403121561121a57600080fd5b5035919050565b80356001600160a01b038116811461123857600080fd5b919050565b6000806040838503121561125057600080fd5b61125983611221565b946020939093013593505050565b60008060006060848603121561127c57600080fd5b61128584611221565b925061129360208501611221565b9150604084013590509250925092565b6000602082840312156112b557600080fd5b61073c82611221565b600080604083850312156112d157600080fd5b6112da83611221565b9150602083013580151581146112ef57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561132657600080fd5b61132f85611221565b935061133d60208601611221565b925060408501359150606085013567ffffffffffffffff8082111561136157600080fd5b818701915087601f83011261137557600080fd5b813581811115611387576113876112fa565b604051601f8201601f19908116603f011681019083821181831017156113af576113af6112fa565b816040528281528a60208487010111156113c857600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156113ff57600080fd5b61140883611221565b915061141660208401611221565b90509250929050565b600181811c9082168061143357607f821691505b6020821081141561145457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60006000198214156114d1576114d16114a7565b5060010190565b600083516114ea81846020880161119d565b8351908301906114fe81836020880161119d565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000828210156115b0576115b06114a7565b500390565b600082198211156115c8576115c86114a7565b500190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611600908301846111c9565b9695505050505050565b60006020828403121561161c57600080fd5b815161073c8161116a56fea26469706673582212209d15891ffaf9ac9d5b8843e0fb4a8da76bf3765476525e1c1639c0ea695c191664736f6c63430008090033";

export class TokenERC721__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenERC721> {
    return super.deploy(overrides || {}) as Promise<TokenERC721>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TokenERC721 {
    return super.attach(address) as TokenERC721;
  }
  connect(signer: Signer): TokenERC721__factory {
    return super.connect(signer) as TokenERC721__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenERC721Interface {
    return new utils.Interface(_abi) as TokenERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenERC721 {
    return new Contract(address, _abi, signerOrProvider) as TokenERC721;
  }
}
