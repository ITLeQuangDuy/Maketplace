{"id":"005a97cf5e58c52f4f4a6c398e53a654","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/interfaces/IERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../token/ERC20/IERC20Upgradeable.sol\";\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165Upgradeable.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155Upgradeable is IERC165Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165Upgradeable.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721Upgradeable is IERC165Upgradeable {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"contracts/interfaces/IToken.sol":{"content":""},"contracts/Maketplace.sol":{"content":"// SPDX-License-Identifier: Unlicensed\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\";\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\";\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/interfaces/IERC20Upgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\nimport \"./interfaces/IToken.sol\";\r\n\r\ncontract Maketplace is OwnableUpgradeable, PausableUpgradeable{\r\n\r\n    function initialize() public initializer{\r\n        __Pausable_init_unchained();\r\n        __Ownable_init_unchained();\r\n    }\r\n\r\n    //======================================FUNCTION RECEEIVER========================================\r\n    function onERC721Received(\r\n        address,\r\n        address,\r\n        uint256,\r\n        bytes calldata\r\n    ) external pure returns (bytes4) {\r\n        return this.onERC721Received.selector;\r\n    }\r\n\r\n    function onERC1155Received(\r\n        address,\r\n        address,\r\n        uint256,\r\n        uint256,\r\n        bytes calldata\r\n    ) public pure returns (bytes4) {\r\n        return this.onERC1155Received.selector;\r\n    }\r\n\r\n    function onERC1155BatchReceived(\r\n        address,\r\n        address,\r\n        uint256[] calldata,\r\n        uint256[] calldata,\r\n        bytes calldata\r\n    ) external pure returns (bytes4) {\r\n        return this.onERC1155BatchReceived.selector;\r\n    }\r\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/IToken.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/interfaces/IToken.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"3420","formattedMessage":"Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.9;\"\n--> contracts/interfaces/IToken.sol\n\n","message":"Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.9;\"","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/interfaces/IToken.sol","start":-1},"type":"Warning"}],"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1103],"ContextUpgradeable":[1145],"Initializable":[303],"OwnableUpgradeable":[131]},"id":132,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":132,"sourceUnit":1146,"src":"127:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":132,"sourceUnit":304,"src":"169:42:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":303,"src":"748:13:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"748:13:0"},{"baseName":{"id":7,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":1145,"src":"763:18:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"763:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"213:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":131,"linearizedBaseContracts":[131,1145,303],"name":"OwnableUpgradeable","nameLocation":"726:18:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":10,"mutability":"mutable","name":"_owner","nameLocation":"804:6:0","nodeType":"VariableDeclaration","scope":131,"src":"788:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":16,"name":"OwnershipTransferred","nameLocation":"823:20:0","nodeType":"EventDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"860:13:0","nodeType":"VariableDeclaration","scope":16,"src":"844:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"891:8:0","nodeType":"VariableDeclaration","scope":16,"src":"875:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"843:57:0"},"src":"817:84:0"},{"body":{"id":25,"nodeType":"Block","src":"1055:43:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":22,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"1065:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":23,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1065:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":24,"nodeType":"ExpressionStatement","src":"1065:26:0"}]},"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"907:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":26,"implemented":true,"kind":"function","modifiers":[{"id":20,"kind":"modifierInvocation","modifierName":{"id":19,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":248,"src":"1038:16:0"},"nodeType":"ModifierInvocation","src":"1038:16:0"}],"name":"__Ownable_init","nameLocation":"1012:14:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1026:2:0"},"returnParameters":{"id":21,"nodeType":"ParameterList","parameters":[],"src":"1055:0:0"},"scope":131,"src":"1003:95:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":36,"nodeType":"Block","src":"1166:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":32,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"1195:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":33,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1195:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":31,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"1176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"1176:32:0"}]},"id":37,"implemented":true,"kind":"function","modifiers":[{"id":29,"kind":"modifierInvocation","modifierName":{"id":28,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":248,"src":"1149:16:0"},"nodeType":"ModifierInvocation","src":"1149:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1113:24:0","nodeType":"FunctionDefinition","parameters":{"id":27,"nodeType":"ParameterList","parameters":[],"src":"1137:2:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"1166:0:0"},"scope":131,"src":"1104:111:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":44,"nodeType":"Block","src":"1324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":40,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"1334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"ExpressionStatement","src":"1334:13:0"},{"id":43,"nodeType":"PlaceholderStatement","src":"1357:1:0"}]},"documentation":{"id":38,"nodeType":"StructuredDocumentation","src":"1221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":45,"name":"onlyOwner","nameLocation":"1312:9:0","nodeType":"ModifierDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[],"src":"1321:2:0"},"src":"1303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":53,"nodeType":"Block","src":"1496:30:0","statements":[{"expression":{"id":51,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1513:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":50,"id":52,"nodeType":"Return","src":"1506:13:0"}]},"documentation":{"id":46,"nodeType":"StructuredDocumentation","src":"1371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":54,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1450:5:0","nodeType":"FunctionDefinition","parameters":{"id":47,"nodeType":"ParameterList","parameters":[],"src":"1455:2:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"1487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1486:9:0"},"scope":131,"src":"1441:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":67,"nodeType":"Block","src":"1644:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":63,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":59,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1662:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1662:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":61,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"1673:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":62,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1673:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1662:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1687:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":58,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1654:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1654:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1654:68:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1532:62:0","text":" @dev Throws if the sender is not the owner."},"id":68,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1608:11:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1619:2:0"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[],"src":"1644:0:0"},"scope":131,"src":"1599:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":81,"nodeType":"Block","src":"2125:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":77,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2162:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":76,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":75,"name":"address","nodeType":"ElementaryTypeName","src":"2154:7:0","typeDescriptions":{}}},"id":78,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2154:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":74,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2135:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2135:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"ExpressionStatement","src":"2135:30:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1735:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":82,"implemented":true,"kind":"function","modifiers":[{"id":72,"kind":"modifierInvocation","modifierName":{"id":71,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2115:9:0"},"nodeType":"ModifierInvocation","src":"2115:9:0"}],"name":"renounceOwnership","nameLocation":"2080:17:0","nodeType":"FunctionDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"2097:2:0"},"returnParameters":{"id":73,"nodeType":"ParameterList","parameters":[],"src":"2125:0:0"},"scope":131,"src":"2071:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":104,"nodeType":"Block","src":"2391:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":91,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2409:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2429:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":93,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2421:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2421:7:0","typeDescriptions":{}}},"id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2421:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2409:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":97,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2433:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":90,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2401:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":98,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2401:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":99,"nodeType":"ExpressionStatement","src":"2401:73:0"},{"expression":{"arguments":[{"id":101,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2503:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2484:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2484:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":103,"nodeType":"ExpressionStatement","src":"2484:28:0"}]},"documentation":{"id":83,"nodeType":"StructuredDocumentation","src":"2178:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":105,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2381:9:0"},"nodeType":"ModifierInvocation","src":"2381:9:0"}],"name":"transferOwnership","nameLocation":"2330:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"newOwner","nameLocation":"2356:8:0","nodeType":"VariableDeclaration","scope":105,"src":"2348:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"2348:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2347:18:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2391:0:0"},"scope":131,"src":"2321:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":124,"nodeType":"Block","src":"2736:124:0","statements":[{"assignments":[112],"declarations":[{"constant":false,"id":112,"mutability":"mutable","name":"oldOwner","nameLocation":"2754:8:0","nodeType":"VariableDeclaration","scope":124,"src":"2746:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"2746:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":114,"initialValue":{"id":113,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2765:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2746:25:0"},{"expression":{"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":115,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2781:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":116,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"2790:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2781:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":118,"nodeType":"ExpressionStatement","src":"2781:17:0"},{"eventCall":{"arguments":[{"id":120,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"2834:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":121,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"2844:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":119,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"2813:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2813:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":123,"nodeType":"EmitStatement","src":"2808:45:0"}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2525:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":125,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2682:18:0","nodeType":"FunctionDefinition","parameters":{"id":109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":108,"mutability":"mutable","name":"newOwner","nameLocation":"2709:8:0","nodeType":"VariableDeclaration","scope":125,"src":"2701:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2700:18:0"},"returnParameters":{"id":110,"nodeType":"ParameterList","parameters":[],"src":"2736:0:0"},"scope":131,"src":"2673:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":126,"nodeType":"StructuredDocumentation","src":"2866:254:0","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":130,"mutability":"mutable","name":"__gap","nameLocation":"3145:5:0","nodeType":"VariableDeclaration","scope":131,"src":"3125:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":127,"name":"uint256","nodeType":"ElementaryTypeName","src":"3125:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":129,"length":{"hexValue":"3439","id":128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3133:2:0","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3125:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":132,"src":"708:2445:0","usedErrors":[]}],"src":"102:3052:0"},"id":0},"@openzeppelin/contracts-upgradeable/interfaces/IERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC20Upgradeable.sol","exportedSymbols":{"IERC20Upgradeable":[703]},"id":135,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":133,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"90:23:1"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"../token/ERC20/IERC20Upgradeable.sol","id":134,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":135,"sourceUnit":704,"src":"115:46:1","symbolAliases":[],"unitAlias":""}],"src":"90:72:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[1103],"Initializable":[303]},"id":304,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":136,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:2"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":137,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":304,"sourceUnit":1104,"src":"138:44:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":138,"nodeType":"StructuredDocumentation","src":"184:2198:2","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":303,"linearizedBaseContracts":[303],"name":"Initializable","nameLocation":"2401:13:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":139,"nodeType":"StructuredDocumentation","src":"2421:109:2","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":141,"mutability":"mutable","name":"_initialized","nameLocation":"2549:12:2","nodeType":"VariableDeclaration","scope":303,"src":"2535:26:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":140,"name":"uint8","nodeType":"ElementaryTypeName","src":"2535:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":142,"nodeType":"StructuredDocumentation","src":"2568:91:2","text":" @dev Indicates that the contract is in the process of being initialized."},"id":144,"mutability":"mutable","name":"_initializing","nameLocation":"2677:13:2","nodeType":"VariableDeclaration","scope":303,"src":"2664:26:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":143,"name":"bool","nodeType":"ElementaryTypeName","src":"2664:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":145,"nodeType":"StructuredDocumentation","src":"2697:90:2","text":" @dev Triggered when the contract has been initialized or reinitialized."},"id":149,"name":"Initialized","nameLocation":"2798:11:2","nodeType":"EventDefinition","parameters":{"id":148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":147,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2816:7:2","nodeType":"VariableDeclaration","scope":149,"src":"2810:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":146,"name":"uint8","nodeType":"ElementaryTypeName","src":"2810:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2809:15:2"},"src":"2792:33:2"},{"body":{"id":204,"nodeType":"Block","src":"3258:483:2","statements":[{"assignments":[153],"declarations":[{"constant":false,"id":153,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3273:14:2","nodeType":"VariableDeclaration","scope":204,"src":"3268:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":152,"name":"bool","nodeType":"ElementaryTypeName","src":"3268:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":156,"initialValue":{"id":155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3290:14:2","subExpression":{"id":154,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"3291:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3268:36:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":158,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"3336:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":159,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"3354:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3369:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3354:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3336:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":163,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3335:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3376:45:2","subExpression":{"arguments":[{"arguments":[{"id":168,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3415:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$303","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$303","typeString":"contract Initializable"}],"id":167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3407:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3407:7:2","typeDescriptions":{}}},"id":169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3407:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":164,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"3377:18:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1103_$","typeString":"type(library AddressUpgradeable)"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":837,"src":"3377:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3377:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":172,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"3425:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3441:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3425:17:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3376:66:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":176,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3375:68:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3335:108:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3457:48:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":157,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3314:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3314:201:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":180,"nodeType":"ExpressionStatement","src":"3314:201:2"},{"expression":{"id":183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":181,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"3525:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3540:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3525:16:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":184,"nodeType":"ExpressionStatement","src":"3525:16:2"},{"condition":{"id":185,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"3555:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":191,"nodeType":"IfStatement","src":"3551:65:2","trueBody":{"id":190,"nodeType":"Block","src":"3571:45:2","statements":[{"expression":{"id":188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":186,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"3585:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3601:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3585:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":189,"nodeType":"ExpressionStatement","src":"3585:20:2"}]}},{"id":192,"nodeType":"PlaceholderStatement","src":"3625:1:2"},{"condition":{"id":193,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"3640:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":203,"nodeType":"IfStatement","src":"3636:99:2","trueBody":{"id":202,"nodeType":"Block","src":"3656:79:2","statements":[{"expression":{"id":196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":194,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"3670:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3686:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3670:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":197,"nodeType":"ExpressionStatement","src":"3670:21:2"},{"eventCall":{"arguments":[{"hexValue":"31","id":199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3722:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":198,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"3710:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3710:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":201,"nodeType":"EmitStatement","src":"3705:19:2"}]}}]},"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"2831:399:2","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":205,"name":"initializer","nameLocation":"3244:11:2","nodeType":"ModifierDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"3255:2:2"},"src":"3235:506:2","virtual":false,"visibility":"internal"},{"body":{"id":237,"nodeType":"Block","src":"4852:255:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:14:2","subExpression":{"id":211,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"4871:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":213,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"4888:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":214,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"4903:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4888:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4870:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4912:48:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":210,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4862:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4862:99:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":219,"nodeType":"ExpressionStatement","src":"4862:99:2"},{"expression":{"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":220,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"4971:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":221,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"4986:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4971:22:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":223,"nodeType":"ExpressionStatement","src":"4971:22:2"},{"expression":{"id":226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":224,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"5003:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5019:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5003:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":227,"nodeType":"ExpressionStatement","src":"5003:20:2"},{"id":228,"nodeType":"PlaceholderStatement","src":"5033:1:2"},{"expression":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":229,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"5044:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5060:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5044:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":232,"nodeType":"ExpressionStatement","src":"5044:21:2"},{"eventCall":{"arguments":[{"id":234,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"5092:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":233,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5080:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5080:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":236,"nodeType":"EmitStatement","src":"5075:25:2"}]},"documentation":{"id":206,"nodeType":"StructuredDocumentation","src":"3747:1062:2","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":238,"name":"reinitializer","nameLocation":"4823:13:2","nodeType":"ModifierDefinition","parameters":{"id":209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":208,"mutability":"mutable","name":"version","nameLocation":"4843:7:2","nodeType":"VariableDeclaration","scope":238,"src":"4837:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":207,"name":"uint8","nodeType":"ElementaryTypeName","src":"4837:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4836:15:2"},"src":"4814:293:2","virtual":false,"visibility":"internal"},{"body":{"id":247,"nodeType":"Block","src":"5345:97:2","statements":[{"expression":{"arguments":[{"id":242,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"5363:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5378:45:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":241,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5355:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5355:69:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":245,"nodeType":"ExpressionStatement","src":"5355:69:2"},{"id":246,"nodeType":"PlaceholderStatement","src":"5434:1:2"}]},"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"5113:199:2","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":248,"name":"onlyInitializing","nameLocation":"5326:16:2","nodeType":"ModifierDefinition","parameters":{"id":240,"nodeType":"ParameterList","parameters":[],"src":"5342:2:2"},"src":"5317:125:2","virtual":false,"visibility":"internal"},{"body":{"id":283,"nodeType":"Block","src":"5977:230:2","statements":[{"expression":{"arguments":[{"id":254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5995:14:2","subExpression":{"id":253,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"5996:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6011:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":252,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5987:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5987:66:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":257,"nodeType":"ExpressionStatement","src":"5987:66:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":258,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"6067:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6087:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":260,"name":"uint8","nodeType":"ElementaryTypeName","src":"6087:5:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":259,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6082:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6082:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6082:15:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6067:30:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":282,"nodeType":"IfStatement","src":"6063:138:2","trueBody":{"id":281,"nodeType":"Block","src":"6099:102:2","statements":[{"expression":{"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":265,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"6113:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6133:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":267,"name":"uint8","nodeType":"ElementaryTypeName","src":"6133:5:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":266,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6128:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6128:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6128:15:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6113:30:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":272,"nodeType":"ExpressionStatement","src":"6113:30:2"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6179:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":275,"name":"uint8","nodeType":"ElementaryTypeName","src":"6179:5:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":274,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6174:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6174:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6174:15:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":273,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"6162:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6162:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":280,"nodeType":"EmitStatement","src":"6157:33:2"}]}}]},"documentation":{"id":249,"nodeType":"StructuredDocumentation","src":"5448:475:2","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":284,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5937:20:2","nodeType":"FunctionDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[],"src":"5957:2:2"},"returnParameters":{"id":251,"nodeType":"ParameterList","parameters":[],"src":"5977:0:2"},"scope":303,"src":"5928:279:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":292,"nodeType":"Block","src":"6381:36:2","statements":[{"expression":{"id":290,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"6398:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":289,"id":291,"nodeType":"Return","src":"6391:19:2"}]},"documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"6213:99:2","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":293,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6326:22:2","nodeType":"FunctionDefinition","parameters":{"id":286,"nodeType":"ParameterList","parameters":[],"src":"6348:2:2"},"returnParameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":293,"src":"6374:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":287,"name":"uint8","nodeType":"ElementaryTypeName","src":"6374:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6373:7:2"},"scope":303,"src":"6317:100:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":301,"nodeType":"Block","src":"6589:37:2","statements":[{"expression":{"id":299,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"6606:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":298,"id":300,"nodeType":"Return","src":"6599:20:2"}]},"documentation":{"id":294,"nodeType":"StructuredDocumentation","src":"6423:105:2","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":302,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6542:15:2","nodeType":"FunctionDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[],"src":"6557:2:2"},"returnParameters":{"id":298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":302,"src":"6583:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":296,"name":"bool","nodeType":"ElementaryTypeName","src":"6583:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6582:6:2"},"scope":303,"src":"6533:93:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":304,"src":"2383:4245:2","usedErrors":[]}],"src":"113:6516:2"},"id":2},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1103],"ContextUpgradeable":[1145],"Initializable":[303],"PausableUpgradeable":[430]},"id":431,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":305,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":306,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":431,"sourceUnit":1146,"src":"130:41:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":307,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":431,"sourceUnit":304,"src":"172:42:3","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":309,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":303,"src":"697:13:3"},"id":310,"nodeType":"InheritanceSpecifier","src":"697:13:3"},{"baseName":{"id":311,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":1145,"src":"712:18:3"},"id":312,"nodeType":"InheritanceSpecifier","src":"712:18:3"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":308,"nodeType":"StructuredDocumentation","src":"216:439:3","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":430,"linearizedBaseContracts":[430,1145,303],"name":"PausableUpgradeable","nameLocation":"674:19:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":313,"nodeType":"StructuredDocumentation","src":"737:73:3","text":" @dev Emitted when the pause is triggered by `account`."},"id":317,"name":"Paused","nameLocation":"821:6:3","nodeType":"EventDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"836:7:3","nodeType":"VariableDeclaration","scope":317,"src":"828:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"828:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"827:17:3"},"src":"815:30:3"},{"anonymous":false,"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"851:70:3","text":" @dev Emitted when the pause is lifted by `account`."},"id":322,"name":"Unpaused","nameLocation":"932:8:3","nodeType":"EventDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"949:7:3","nodeType":"VariableDeclaration","scope":322,"src":"941:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"941:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"940:17:3"},"src":"926:32:3"},{"constant":false,"id":324,"mutability":"mutable","name":"_paused","nameLocation":"977:7:3","nodeType":"VariableDeclaration","scope":430,"src":"964:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":323,"name":"bool","nodeType":"ElementaryTypeName","src":"964:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":333,"nodeType":"Block","src":"1116:44:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":330,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"1126:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1126:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":332,"nodeType":"ExpressionStatement","src":"1126:27:3"}]},"documentation":{"id":325,"nodeType":"StructuredDocumentation","src":"991:67:3","text":" @dev Initializes the contract in unpaused state."},"id":334,"implemented":true,"kind":"function","modifiers":[{"id":328,"kind":"modifierInvocation","modifierName":{"id":327,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":248,"src":"1099:16:3"},"nodeType":"ModifierInvocation","src":"1099:16:3"}],"name":"__Pausable_init","nameLocation":"1072:15:3","nodeType":"FunctionDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[],"src":"1087:2:3"},"returnParameters":{"id":329,"nodeType":"ParameterList","parameters":[],"src":"1116:0:3"},"scope":430,"src":"1063:97:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":343,"nodeType":"Block","src":"1229:32:3","statements":[{"expression":{"id":341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":339,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"1239:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1249:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1239:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":342,"nodeType":"ExpressionStatement","src":"1239:15:3"}]},"id":344,"implemented":true,"kind":"function","modifiers":[{"id":337,"kind":"modifierInvocation","modifierName":{"id":336,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":248,"src":"1212:16:3"},"nodeType":"ModifierInvocation","src":"1212:16:3"}],"name":"__Pausable_init_unchained","nameLocation":"1175:25:3","nodeType":"FunctionDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[],"src":"1200:2:3"},"returnParameters":{"id":338,"nodeType":"ParameterList","parameters":[],"src":"1229:0:3"},"scope":430,"src":"1166:95:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":351,"nodeType":"Block","src":"1472:47:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":347,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"1482:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1482:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":349,"nodeType":"ExpressionStatement","src":"1482:19:3"},{"id":350,"nodeType":"PlaceholderStatement","src":"1511:1:3"}]},"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"1267:175:3","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":352,"name":"whenNotPaused","nameLocation":"1456:13:3","nodeType":"ModifierDefinition","parameters":{"id":346,"nodeType":"ParameterList","parameters":[],"src":"1469:2:3"},"src":"1447:72:3","virtual":false,"visibility":"internal"},{"body":{"id":359,"nodeType":"Block","src":"1719:44:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":355,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"1729:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1729:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":357,"nodeType":"ExpressionStatement","src":"1729:16:3"},{"id":358,"nodeType":"PlaceholderStatement","src":"1755:1:3"}]},"documentation":{"id":353,"nodeType":"StructuredDocumentation","src":"1525:167:3","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":360,"name":"whenPaused","nameLocation":"1706:10:3","nodeType":"ModifierDefinition","parameters":{"id":354,"nodeType":"ParameterList","parameters":[],"src":"1716:2:3"},"src":"1697:66:3","virtual":false,"visibility":"internal"},{"body":{"id":368,"nodeType":"Block","src":"1911:31:3","statements":[{"expression":{"id":366,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"1928:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":365,"id":367,"nodeType":"Return","src":"1921:14:3"}]},"documentation":{"id":361,"nodeType":"StructuredDocumentation","src":"1769:84:3","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":369,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1867:6:3","nodeType":"FunctionDefinition","parameters":{"id":362,"nodeType":"ParameterList","parameters":[],"src":"1873:2:3"},"returnParameters":{"id":365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":369,"src":"1905:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":363,"name":"bool","nodeType":"ElementaryTypeName","src":"1905:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1904:6:3"},"scope":430,"src":"1858:84:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":380,"nodeType":"Block","src":"2061:55:3","statements":[{"expression":{"arguments":[{"id":376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2079:9:3","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":374,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"2080:6:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2080:8:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2090:18:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":373,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2071:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2071:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":379,"nodeType":"ExpressionStatement","src":"2071:38:3"}]},"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"1948:57:3","text":" @dev Throws if the contract is paused."},"id":381,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2019:17:3","nodeType":"FunctionDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[],"src":"2036:2:3"},"returnParameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"2061:0:3"},"scope":430,"src":"2010:106:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":391,"nodeType":"Block","src":"2236:58:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":386,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"2254:6:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2254:8:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2264:22:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":385,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2246:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2246:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":390,"nodeType":"ExpressionStatement","src":"2246:41:3"}]},"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"2122:61:3","text":" @dev Throws if the contract is not paused."},"id":392,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2197:14:3","nodeType":"FunctionDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"2211:2:3"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[],"src":"2236:0:3"},"scope":430,"src":"2188:106:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":407,"nodeType":"Block","src":"2478:66:3","statements":[{"expression":{"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":398,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"2488:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2498:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2488:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":401,"nodeType":"ExpressionStatement","src":"2488:14:3"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":403,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"2524:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2524:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":402,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2517:6:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2517:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":406,"nodeType":"EmitStatement","src":"2512:25:3"}]},"documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"2300:124:3","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":408,"implemented":true,"kind":"function","modifiers":[{"id":396,"kind":"modifierInvocation","modifierName":{"id":395,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":352,"src":"2464:13:3"},"nodeType":"ModifierInvocation","src":"2464:13:3"}],"name":"_pause","nameLocation":"2438:6:3","nodeType":"FunctionDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[],"src":"2444:2:3"},"returnParameters":{"id":397,"nodeType":"ParameterList","parameters":[],"src":"2478:0:3"},"scope":430,"src":"2429:115:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":423,"nodeType":"Block","src":"2724:69:3","statements":[{"expression":{"id":416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":414,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"2734:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2744:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2734:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":417,"nodeType":"ExpressionStatement","src":"2734:15:3"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":419,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"2773:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2773:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":418,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"2764:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2764:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":422,"nodeType":"EmitStatement","src":"2759:27:3"}]},"documentation":{"id":409,"nodeType":"StructuredDocumentation","src":"2550:121:3","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":424,"implemented":true,"kind":"function","modifiers":[{"id":412,"kind":"modifierInvocation","modifierName":{"id":411,"name":"whenPaused","nodeType":"IdentifierPath","referencedDeclaration":360,"src":"2713:10:3"},"nodeType":"ModifierInvocation","src":"2713:10:3"}],"name":"_unpause","nameLocation":"2685:8:3","nodeType":"FunctionDefinition","parameters":{"id":410,"nodeType":"ParameterList","parameters":[],"src":"2693:2:3"},"returnParameters":{"id":413,"nodeType":"ParameterList","parameters":[],"src":"2724:0:3"},"scope":430,"src":"2676:117:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":425,"nodeType":"StructuredDocumentation","src":"2799:254:3","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":429,"mutability":"mutable","name":"__gap","nameLocation":"3078:5:3","nodeType":"VariableDeclaration","scope":430,"src":"3058:25:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":426,"name":"uint256","nodeType":"ElementaryTypeName","src":"3058:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":428,"length":{"hexValue":"3439","id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3066:2:3","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3058:11:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":431,"src":"656:2430:3","usedErrors":[]}],"src":"105:2982:3"},"id":3},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1103],"Initializable":[303],"ReentrancyGuardUpgradeable":[503]},"id":504,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":432,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":433,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":504,"sourceUnit":304,"src":"136:42:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":435,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":303,"src":"979:13:4"},"id":436,"nodeType":"InheritanceSpecifier","src":"979:13:4"}],"canonicalName":"ReentrancyGuardUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":434,"nodeType":"StructuredDocumentation","src":"180:750:4","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":503,"linearizedBaseContracts":[503,303],"name":"ReentrancyGuardUpgradeable","nameLocation":"949:26:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":439,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1772:12:4","nodeType":"VariableDeclaration","scope":503,"src":"1747:41:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":437,"name":"uint256","nodeType":"ElementaryTypeName","src":"1747:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1787:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":442,"mutability":"constant","name":"_ENTERED","nameLocation":"1819:8:4","nodeType":"VariableDeclaration","scope":503,"src":"1794:37:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":440,"name":"uint256","nodeType":"ElementaryTypeName","src":"1794:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1830:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":444,"mutability":"mutable","name":"_status","nameLocation":"1854:7:4","nodeType":"VariableDeclaration","scope":503,"src":"1838:23:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":452,"nodeType":"Block","src":"1928:51:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":449,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"1938:32:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1938:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":451,"nodeType":"ExpressionStatement","src":"1938:34:4"}]},"id":453,"implemented":true,"kind":"function","modifiers":[{"id":447,"kind":"modifierInvocation","modifierName":{"id":446,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":248,"src":"1911:16:4"},"nodeType":"ModifierInvocation","src":"1911:16:4"}],"name":"__ReentrancyGuard_init","nameLocation":"1877:22:4","nodeType":"FunctionDefinition","parameters":{"id":445,"nodeType":"ParameterList","parameters":[],"src":"1899:2:4"},"returnParameters":{"id":448,"nodeType":"ParameterList","parameters":[],"src":"1928:0:4"},"scope":503,"src":"1868:111:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":462,"nodeType":"Block","src":"2055:39:4","statements":[{"expression":{"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":458,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2065:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":459,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"2075:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2065:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":461,"nodeType":"ExpressionStatement","src":"2065:22:4"}]},"id":463,"implemented":true,"kind":"function","modifiers":[{"id":456,"kind":"modifierInvocation","modifierName":{"id":455,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":248,"src":"2038:16:4"},"nodeType":"ModifierInvocation","src":"2038:16:4"}],"name":"__ReentrancyGuard_init_unchained","nameLocation":"1994:32:4","nodeType":"FunctionDefinition","parameters":{"id":454,"nodeType":"ParameterList","parameters":[],"src":"2026:2:4"},"returnParameters":{"id":457,"nodeType":"ParameterList","parameters":[],"src":"2055:0:4"},"scope":503,"src":"1985:109:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":473,"nodeType":"Block","src":"2495:79:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":466,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"2505:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2505:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":468,"nodeType":"ExpressionStatement","src":"2505:21:4"},{"id":469,"nodeType":"PlaceholderStatement","src":"2536:1:4"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":470,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"2547:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2547:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":472,"nodeType":"ExpressionStatement","src":"2547:20:4"}]},"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"2100:366:4","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":474,"name":"nonReentrant","nameLocation":"2480:12:4","nodeType":"ModifierDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"2492:2:4"},"src":"2471:103:4","virtual":false,"visibility":"internal"},{"body":{"id":488,"nodeType":"Block","src":"2619:248:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":478,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2712:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":479,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"2723:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2712:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2733:33:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":477,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2704:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2704:63:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":483,"nodeType":"ExpressionStatement","src":"2704:63:4"},{"expression":{"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":484,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2842:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":485,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"2852:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":487,"nodeType":"ExpressionStatement","src":"2842:18:4"}]},"id":489,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2589:19:4","nodeType":"FunctionDefinition","parameters":{"id":475,"nodeType":"ParameterList","parameters":[],"src":"2608:2:4"},"returnParameters":{"id":476,"nodeType":"ParameterList","parameters":[],"src":"2619:0:4"},"scope":503,"src":"2580:287:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":496,"nodeType":"Block","src":"2911:171:4","statements":[{"expression":{"id":494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":492,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"3053:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":493,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"3063:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3053:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":495,"nodeType":"ExpressionStatement","src":"3053:22:4"}]},"id":497,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2882:18:4","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[],"src":"2900:2:4"},"returnParameters":{"id":491,"nodeType":"ParameterList","parameters":[],"src":"2911:0:4"},"scope":503,"src":"2873:209:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"constant":false,"documentation":{"id":498,"nodeType":"StructuredDocumentation","src":"3088:254:4","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":502,"mutability":"mutable","name":"__gap","nameLocation":"3367:5:4","nodeType":"VariableDeclaration","scope":503,"src":"3347:25:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":499,"name":"uint256","nodeType":"ElementaryTypeName","src":"3347:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":501,"length":{"hexValue":"3439","id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3355:2:4","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3347:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":504,"src":"931:2444:4","usedErrors":[]}],"src":"112:3264:4"},"id":4},"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol","exportedSymbols":{"IERC1155Upgradeable":[625],"IERC165Upgradeable":[1201]},"id":626,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":505,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","file":"../../utils/introspection/IERC165Upgradeable.sol","id":506,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":626,"sourceUnit":1202,"src":"135:58:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":508,"name":"IERC165Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1201,"src":"394:18:5"},"id":509,"nodeType":"InheritanceSpecifier","src":"394:18:5"}],"canonicalName":"IERC1155Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":507,"nodeType":"StructuredDocumentation","src":"195:165:5","text":" @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"},"fullyImplemented":false,"id":625,"linearizedBaseContracts":[625,1201],"name":"IERC1155Upgradeable","nameLocation":"371:19:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":510,"nodeType":"StructuredDocumentation","src":"419:121:5","text":" @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"id":522,"name":"TransferSingle","nameLocation":"551:14:5","nodeType":"EventDefinition","parameters":{"id":521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":512,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"582:8:5","nodeType":"VariableDeclaration","scope":522,"src":"566:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"566:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":514,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"608:4:5","nodeType":"VariableDeclaration","scope":522,"src":"592:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":513,"name":"address","nodeType":"ElementaryTypeName","src":"592:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":516,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"630:2:5","nodeType":"VariableDeclaration","scope":522,"src":"614:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":515,"name":"address","nodeType":"ElementaryTypeName","src":"614:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":518,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"642:2:5","nodeType":"VariableDeclaration","scope":522,"src":"634:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":517,"name":"uint256","nodeType":"ElementaryTypeName","src":"634:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":520,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"654:5:5","nodeType":"VariableDeclaration","scope":522,"src":"646:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":519,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"565:95:5"},"src":"545:116:5"},{"anonymous":false,"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"667:144:5","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"id":537,"name":"TransferBatch","nameLocation":"822:13:5","nodeType":"EventDefinition","parameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":525,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"861:8:5","nodeType":"VariableDeclaration","scope":537,"src":"845:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"845:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":527,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"895:4:5","nodeType":"VariableDeclaration","scope":537,"src":"879:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"879:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":529,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"925:2:5","nodeType":"VariableDeclaration","scope":537,"src":"909:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"909:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":532,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"947:3:5","nodeType":"VariableDeclaration","scope":537,"src":"937:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":531,"nodeType":"ArrayTypeName","src":"937:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":535,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"970:6:5","nodeType":"VariableDeclaration","scope":537,"src":"960:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":533,"name":"uint256","nodeType":"ElementaryTypeName","src":"960:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":534,"nodeType":"ArrayTypeName","src":"960:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"835:147:5"},"src":"816:167:5"},{"anonymous":false,"documentation":{"id":538,"nodeType":"StructuredDocumentation","src":"989:147:5","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"id":546,"name":"ApprovalForAll","nameLocation":"1147:14:5","nodeType":"EventDefinition","parameters":{"id":545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":540,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1178:7:5","nodeType":"VariableDeclaration","scope":546,"src":"1162:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"1162:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":542,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1203:8:5","nodeType":"VariableDeclaration","scope":546,"src":"1187:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":541,"name":"address","nodeType":"ElementaryTypeName","src":"1187:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":544,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1218:8:5","nodeType":"VariableDeclaration","scope":546,"src":"1213:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":543,"name":"bool","nodeType":"ElementaryTypeName","src":"1213:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1161:66:5"},"src":"1141:87:5"},{"anonymous":false,"documentation":{"id":547,"nodeType":"StructuredDocumentation","src":"1234:343:5","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"id":553,"name":"URI","nameLocation":"1588:3:5","nodeType":"EventDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":549,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1599:5:5","nodeType":"VariableDeclaration","scope":553,"src":"1592:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":548,"name":"string","nodeType":"ElementaryTypeName","src":"1592:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":551,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1622:2:5","nodeType":"VariableDeclaration","scope":553,"src":"1606:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"1606:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1591:34:5"},"src":"1582:44:5"},{"documentation":{"id":554,"nodeType":"StructuredDocumentation","src":"1632:173:5","text":" @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."},"functionSelector":"00fdd58e","id":563,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1819:9:5","nodeType":"FunctionDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"mutability":"mutable","name":"account","nameLocation":"1837:7:5","nodeType":"VariableDeclaration","scope":563,"src":"1829:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"1829:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":558,"mutability":"mutable","name":"id","nameLocation":"1854:2:5","nodeType":"VariableDeclaration","scope":563,"src":"1846:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1846:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1828:29:5"},"returnParameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":563,"src":"1881:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"1881:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1880:9:5"},"scope":625,"src":"1810:80:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":564,"nodeType":"StructuredDocumentation","src":"1896:188:5","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":576,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2098:14:5","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"mutability":"mutable","name":"accounts","nameLocation":"2132:8:5","nodeType":"VariableDeclaration","scope":576,"src":"2113:27:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"2113:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":566,"nodeType":"ArrayTypeName","src":"2113:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"ids","nameLocation":"2161:3:5","nodeType":"VariableDeclaration","scope":576,"src":"2142:22:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":568,"name":"uint256","nodeType":"ElementaryTypeName","src":"2142:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":569,"nodeType":"ArrayTypeName","src":"2142:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2112:53:5"},"returnParameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":576,"src":"2213:16:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":572,"name":"uint256","nodeType":"ElementaryTypeName","src":"2213:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":573,"nodeType":"ArrayTypeName","src":"2213:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2212:18:5"},"scope":625,"src":"2089:142:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":577,"nodeType":"StructuredDocumentation","src":"2237:248:5","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."},"functionSelector":"a22cb465","id":584,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2499:17:5","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":579,"mutability":"mutable","name":"operator","nameLocation":"2525:8:5","nodeType":"VariableDeclaration","scope":584,"src":"2517:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":578,"name":"address","nodeType":"ElementaryTypeName","src":"2517:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"approved","nameLocation":"2540:8:5","nodeType":"VariableDeclaration","scope":584,"src":"2535:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":580,"name":"bool","nodeType":"ElementaryTypeName","src":"2535:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2516:33:5"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"2558:0:5"},"scope":625,"src":"2490:69:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"2565:135:5","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":594,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2714:16:5","nodeType":"FunctionDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"account","nameLocation":"2739:7:5","nodeType":"VariableDeclaration","scope":594,"src":"2731:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"2731:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"operator","nameLocation":"2756:8:5","nodeType":"VariableDeclaration","scope":594,"src":"2748:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":588,"name":"address","nodeType":"ElementaryTypeName","src":"2748:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2730:35:5"},"returnParameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":594,"src":"2789:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":591,"name":"bool","nodeType":"ElementaryTypeName","src":"2789:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2788:6:5"},"scope":625,"src":"2705:90:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":595,"nodeType":"StructuredDocumentation","src":"2801:556:5","text":" @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":608,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3371:16:5","nodeType":"FunctionDefinition","parameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":597,"mutability":"mutable","name":"from","nameLocation":"3405:4:5","nodeType":"VariableDeclaration","scope":608,"src":"3397:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":596,"name":"address","nodeType":"ElementaryTypeName","src":"3397:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":599,"mutability":"mutable","name":"to","nameLocation":"3427:2:5","nodeType":"VariableDeclaration","scope":608,"src":"3419:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":598,"name":"address","nodeType":"ElementaryTypeName","src":"3419:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":601,"mutability":"mutable","name":"id","nameLocation":"3447:2:5","nodeType":"VariableDeclaration","scope":608,"src":"3439:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":600,"name":"uint256","nodeType":"ElementaryTypeName","src":"3439:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":603,"mutability":"mutable","name":"amount","nameLocation":"3467:6:5","nodeType":"VariableDeclaration","scope":608,"src":"3459:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":602,"name":"uint256","nodeType":"ElementaryTypeName","src":"3459:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":605,"mutability":"mutable","name":"data","nameLocation":"3498:4:5","nodeType":"VariableDeclaration","scope":608,"src":"3483:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":604,"name":"bytes","nodeType":"ElementaryTypeName","src":"3483:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3387:121:5"},"returnParameters":{"id":607,"nodeType":"ParameterList","parameters":[],"src":"3517:0:5"},"scope":625,"src":"3362:156:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":609,"nodeType":"StructuredDocumentation","src":"3524:390:5","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":624,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"3928:21:5","nodeType":"FunctionDefinition","parameters":{"id":622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"from","nameLocation":"3967:4:5","nodeType":"VariableDeclaration","scope":624,"src":"3959:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":610,"name":"address","nodeType":"ElementaryTypeName","src":"3959:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":613,"mutability":"mutable","name":"to","nameLocation":"3989:2:5","nodeType":"VariableDeclaration","scope":624,"src":"3981:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":612,"name":"address","nodeType":"ElementaryTypeName","src":"3981:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":616,"mutability":"mutable","name":"ids","nameLocation":"4020:3:5","nodeType":"VariableDeclaration","scope":624,"src":"4001:22:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":614,"name":"uint256","nodeType":"ElementaryTypeName","src":"4001:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":615,"nodeType":"ArrayTypeName","src":"4001:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":619,"mutability":"mutable","name":"amounts","nameLocation":"4052:7:5","nodeType":"VariableDeclaration","scope":624,"src":"4033:26:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":617,"name":"uint256","nodeType":"ElementaryTypeName","src":"4033:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":618,"nodeType":"ArrayTypeName","src":"4033:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":621,"mutability":"mutable","name":"data","nameLocation":"4084:4:5","nodeType":"VariableDeclaration","scope":624,"src":"4069:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":620,"name":"bytes","nodeType":"ElementaryTypeName","src":"4069:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3949:145:5"},"returnParameters":{"id":623,"nodeType":"ParameterList","parameters":[],"src":"4103:0:5"},"scope":625,"src":"3919:185:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":626,"src":"361:3745:5","usedErrors":[]}],"src":"110:3997:5"},"id":5},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","exportedSymbols":{"IERC20Upgradeable":[703]},"id":704,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":627,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":628,"nodeType":"StructuredDocumentation","src":"131:70:6","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":703,"linearizedBaseContracts":[703],"name":"IERC20Upgradeable","nameLocation":"212:17:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":629,"nodeType":"StructuredDocumentation","src":"236:158:6","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":637,"name":"Transfer","nameLocation":"405:8:6","nodeType":"EventDefinition","parameters":{"id":636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":631,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"430:4:6","nodeType":"VariableDeclaration","scope":637,"src":"414:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":633,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"452:2:6","nodeType":"VariableDeclaration","scope":637,"src":"436:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":632,"name":"address","nodeType":"ElementaryTypeName","src":"436:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":635,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"464:5:6","nodeType":"VariableDeclaration","scope":637,"src":"456:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":634,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"413:57:6"},"src":"399:72:6"},{"anonymous":false,"documentation":{"id":638,"nodeType":"StructuredDocumentation","src":"477:148:6","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":646,"name":"Approval","nameLocation":"636:8:6","nodeType":"EventDefinition","parameters":{"id":645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":640,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"661:5:6","nodeType":"VariableDeclaration","scope":646,"src":"645:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":639,"name":"address","nodeType":"ElementaryTypeName","src":"645:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":642,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"684:7:6","nodeType":"VariableDeclaration","scope":646,"src":"668:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"668:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":644,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"701:5:6","nodeType":"VariableDeclaration","scope":646,"src":"693:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":643,"name":"uint256","nodeType":"ElementaryTypeName","src":"693:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"644:63:6"},"src":"630:78:6"},{"documentation":{"id":647,"nodeType":"StructuredDocumentation","src":"714:66:6","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":652,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"794:11:6","nodeType":"FunctionDefinition","parameters":{"id":648,"nodeType":"ParameterList","parameters":[],"src":"805:2:6"},"returnParameters":{"id":651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":652,"src":"831:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":649,"name":"uint256","nodeType":"ElementaryTypeName","src":"831:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"830:9:6"},"scope":703,"src":"785:55:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":653,"nodeType":"StructuredDocumentation","src":"846:72:6","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":660,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"932:9:6","nodeType":"FunctionDefinition","parameters":{"id":656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":655,"mutability":"mutable","name":"account","nameLocation":"950:7:6","nodeType":"VariableDeclaration","scope":660,"src":"942:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"942:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"941:17:6"},"returnParameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":660,"src":"982:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":657,"name":"uint256","nodeType":"ElementaryTypeName","src":"982:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"981:9:6"},"scope":703,"src":"923:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":661,"nodeType":"StructuredDocumentation","src":"997:202:6","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":670,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:6","nodeType":"FunctionDefinition","parameters":{"id":666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":663,"mutability":"mutable","name":"to","nameLocation":"1230:2:6","nodeType":"VariableDeclaration","scope":670,"src":"1222:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":662,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":665,"mutability":"mutable","name":"amount","nameLocation":"1242:6:6","nodeType":"VariableDeclaration","scope":670,"src":"1234:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":664,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:28:6"},"returnParameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":670,"src":"1268:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":667,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:6"},"scope":703,"src":"1204:70:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"1280:264:6","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":680,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:6","nodeType":"FunctionDefinition","parameters":{"id":676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"mutability":"mutable","name":"owner","nameLocation":"1576:5:6","nodeType":"VariableDeclaration","scope":680,"src":"1568:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":672,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":675,"mutability":"mutable","name":"spender","nameLocation":"1591:7:6","nodeType":"VariableDeclaration","scope":680,"src":"1583:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":674,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:6"},"returnParameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":680,"src":"1623:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":677,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:6"},"scope":703,"src":"1549:83:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":681,"nodeType":"StructuredDocumentation","src":"1638:642:6","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":690,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2294:7:6","nodeType":"FunctionDefinition","parameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"spender","nameLocation":"2310:7:6","nodeType":"VariableDeclaration","scope":690,"src":"2302:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":682,"name":"address","nodeType":"ElementaryTypeName","src":"2302:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":685,"mutability":"mutable","name":"amount","nameLocation":"2327:6:6","nodeType":"VariableDeclaration","scope":690,"src":"2319:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":684,"name":"uint256","nodeType":"ElementaryTypeName","src":"2319:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:33:6"},"returnParameters":{"id":689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":690,"src":"2353:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":687,"name":"bool","nodeType":"ElementaryTypeName","src":"2353:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2352:6:6"},"scope":703,"src":"2285:74:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"2365:287:6","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":702,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2666:12:6","nodeType":"FunctionDefinition","parameters":{"id":698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"from","nameLocation":"2696:4:6","nodeType":"VariableDeclaration","scope":702,"src":"2688:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"2688:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"to","nameLocation":"2718:2:6","nodeType":"VariableDeclaration","scope":702,"src":"2710:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"amount","nameLocation":"2738:6:6","nodeType":"VariableDeclaration","scope":702,"src":"2730:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":696,"name":"uint256","nodeType":"ElementaryTypeName","src":"2730:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2678:72:6"},"returnParameters":{"id":701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":702,"src":"2769:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":699,"name":"bool","nodeType":"ElementaryTypeName","src":"2769:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2768:6:6"},"scope":703,"src":"2657:118:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":704,"src":"202:2575:6","usedErrors":[]}],"src":"106:2672:6"},"id":6},"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol","exportedSymbols":{"IERC165Upgradeable":[1201],"IERC721Upgradeable":[819]},"id":820,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":705,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:7"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","file":"../../utils/introspection/IERC165Upgradeable.sol","id":706,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":820,"sourceUnit":1202,"src":"133:58:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":708,"name":"IERC165Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1201,"src":"293:18:7"},"id":709,"nodeType":"InheritanceSpecifier","src":"293:18:7"}],"canonicalName":"IERC721Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":707,"nodeType":"StructuredDocumentation","src":"193:67:7","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":819,"linearizedBaseContracts":[819,1201],"name":"IERC721Upgradeable","nameLocation":"271:18:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":710,"nodeType":"StructuredDocumentation","src":"318:88:7","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":718,"name":"Transfer","nameLocation":"417:8:7","nodeType":"EventDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":712,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"442:4:7","nodeType":"VariableDeclaration","scope":718,"src":"426:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":711,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":714,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"464:2:7","nodeType":"VariableDeclaration","scope":718,"src":"448:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"448:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":716,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"484:7:7","nodeType":"VariableDeclaration","scope":718,"src":"468:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":715,"name":"uint256","nodeType":"ElementaryTypeName","src":"468:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:67:7"},"src":"411:82:7"},{"anonymous":false,"documentation":{"id":719,"nodeType":"StructuredDocumentation","src":"499:94:7","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":727,"name":"Approval","nameLocation":"604:8:7","nodeType":"EventDefinition","parameters":{"id":726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":721,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"629:5:7","nodeType":"VariableDeclaration","scope":727,"src":"613:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"613:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":723,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"652:8:7","nodeType":"VariableDeclaration","scope":727,"src":"636:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":722,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":725,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"678:7:7","nodeType":"VariableDeclaration","scope":727,"src":"662:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":724,"name":"uint256","nodeType":"ElementaryTypeName","src":"662:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"612:74:7"},"src":"598:89:7"},{"anonymous":false,"documentation":{"id":728,"nodeType":"StructuredDocumentation","src":"693:117:7","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":736,"name":"ApprovalForAll","nameLocation":"821:14:7","nodeType":"EventDefinition","parameters":{"id":735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":730,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"852:5:7","nodeType":"VariableDeclaration","scope":736,"src":"836:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":729,"name":"address","nodeType":"ElementaryTypeName","src":"836:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":732,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"875:8:7","nodeType":"VariableDeclaration","scope":736,"src":"859:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":734,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"890:8:7","nodeType":"VariableDeclaration","scope":736,"src":"885:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":733,"name":"bool","nodeType":"ElementaryTypeName","src":"885:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"835:64:7"},"src":"815:85:7"},{"documentation":{"id":737,"nodeType":"StructuredDocumentation","src":"906:76:7","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":744,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"996:9:7","nodeType":"FunctionDefinition","parameters":{"id":740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":739,"mutability":"mutable","name":"owner","nameLocation":"1014:5:7","nodeType":"VariableDeclaration","scope":744,"src":"1006:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":738,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1005:15:7"},"returnParameters":{"id":743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"balance","nameLocation":"1052:7:7","nodeType":"VariableDeclaration","scope":744,"src":"1044:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":741,"name":"uint256","nodeType":"ElementaryTypeName","src":"1044:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1043:17:7"},"scope":819,"src":"987:74:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":745,"nodeType":"StructuredDocumentation","src":"1067:131:7","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":752,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1212:7:7","nodeType":"FunctionDefinition","parameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"tokenId","nameLocation":"1228:7:7","nodeType":"VariableDeclaration","scope":752,"src":"1220:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":746,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1219:17:7"},"returnParameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"mutability":"mutable","name":"owner","nameLocation":"1268:5:7","nodeType":"VariableDeclaration","scope":752,"src":"1260:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":749,"name":"address","nodeType":"ElementaryTypeName","src":"1260:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1259:15:7"},"scope":819,"src":"1203:72:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":753,"nodeType":"StructuredDocumentation","src":"1281:556:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":764,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1851:16:7","nodeType":"FunctionDefinition","parameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"mutability":"mutable","name":"from","nameLocation":"1885:4:7","nodeType":"VariableDeclaration","scope":764,"src":"1877:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"1877:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"to","nameLocation":"1907:2:7","nodeType":"VariableDeclaration","scope":764,"src":"1899:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"1899:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":759,"mutability":"mutable","name":"tokenId","nameLocation":"1927:7:7","nodeType":"VariableDeclaration","scope":764,"src":"1919:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":758,"name":"uint256","nodeType":"ElementaryTypeName","src":"1919:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":761,"mutability":"mutable","name":"data","nameLocation":"1959:4:7","nodeType":"VariableDeclaration","scope":764,"src":"1944:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":760,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1867:102:7"},"returnParameters":{"id":763,"nodeType":"ParameterList","parameters":[],"src":"1978:0:7"},"scope":819,"src":"1842:137:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":765,"nodeType":"StructuredDocumentation","src":"1985:687:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":774,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2686:16:7","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"from","nameLocation":"2720:4:7","nodeType":"VariableDeclaration","scope":774,"src":"2712:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"to","nameLocation":"2742:2:7","nodeType":"VariableDeclaration","scope":774,"src":"2734:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"tokenId","nameLocation":"2762:7:7","nodeType":"VariableDeclaration","scope":774,"src":"2754:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"2754:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2702:73:7"},"returnParameters":{"id":773,"nodeType":"ParameterList","parameters":[],"src":"2784:0:7"},"scope":819,"src":"2677:108:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":775,"nodeType":"StructuredDocumentation","src":"2791:732:7","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":784,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3537:12:7","nodeType":"FunctionDefinition","parameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"mutability":"mutable","name":"from","nameLocation":"3567:4:7","nodeType":"VariableDeclaration","scope":784,"src":"3559:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":776,"name":"address","nodeType":"ElementaryTypeName","src":"3559:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":779,"mutability":"mutable","name":"to","nameLocation":"3589:2:7","nodeType":"VariableDeclaration","scope":784,"src":"3581:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":778,"name":"address","nodeType":"ElementaryTypeName","src":"3581:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":781,"mutability":"mutable","name":"tokenId","nameLocation":"3609:7:7","nodeType":"VariableDeclaration","scope":784,"src":"3601:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":780,"name":"uint256","nodeType":"ElementaryTypeName","src":"3601:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3549:73:7"},"returnParameters":{"id":783,"nodeType":"ParameterList","parameters":[],"src":"3631:0:7"},"scope":819,"src":"3528:104:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":785,"nodeType":"StructuredDocumentation","src":"3638:452:7","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":792,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4104:7:7","nodeType":"FunctionDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"mutability":"mutable","name":"to","nameLocation":"4120:2:7","nodeType":"VariableDeclaration","scope":792,"src":"4112:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":786,"name":"address","nodeType":"ElementaryTypeName","src":"4112:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":789,"mutability":"mutable","name":"tokenId","nameLocation":"4132:7:7","nodeType":"VariableDeclaration","scope":792,"src":"4124:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"4124:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4111:29:7"},"returnParameters":{"id":791,"nodeType":"ParameterList","parameters":[],"src":"4149:0:7"},"scope":819,"src":"4095:55:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":793,"nodeType":"StructuredDocumentation","src":"4156:309:7","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":800,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4479:17:7","nodeType":"FunctionDefinition","parameters":{"id":798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"mutability":"mutable","name":"operator","nameLocation":"4505:8:7","nodeType":"VariableDeclaration","scope":800,"src":"4497:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":794,"name":"address","nodeType":"ElementaryTypeName","src":"4497:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":797,"mutability":"mutable","name":"_approved","nameLocation":"4520:9:7","nodeType":"VariableDeclaration","scope":800,"src":"4515:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":796,"name":"bool","nodeType":"ElementaryTypeName","src":"4515:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4496:34:7"},"returnParameters":{"id":799,"nodeType":"ParameterList","parameters":[],"src":"4539:0:7"},"scope":819,"src":"4470:70:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":801,"nodeType":"StructuredDocumentation","src":"4546:139:7","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":808,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4699:11:7","nodeType":"FunctionDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"tokenId","nameLocation":"4719:7:7","nodeType":"VariableDeclaration","scope":808,"src":"4711:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":802,"name":"uint256","nodeType":"ElementaryTypeName","src":"4711:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4710:17:7"},"returnParameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"operator","nameLocation":"4759:8:7","nodeType":"VariableDeclaration","scope":808,"src":"4751:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":805,"name":"address","nodeType":"ElementaryTypeName","src":"4751:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4750:18:7"},"scope":819,"src":"4690:79:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":809,"nodeType":"StructuredDocumentation","src":"4775:138:7","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":818,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4927:16:7","nodeType":"FunctionDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"owner","nameLocation":"4952:5:7","nodeType":"VariableDeclaration","scope":818,"src":"4944:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"4944:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":813,"mutability":"mutable","name":"operator","nameLocation":"4967:8:7","nodeType":"VariableDeclaration","scope":818,"src":"4959:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":812,"name":"address","nodeType":"ElementaryTypeName","src":"4959:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4943:33:7"},"returnParameters":{"id":817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":818,"src":"5000:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":815,"name":"bool","nodeType":"ElementaryTypeName","src":"5000:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4999:6:7"},"scope":819,"src":"4918:88:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":820,"src":"261:4747:7","usedErrors":[]}],"src":"108:4901:7"},"id":7},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1103]},"id":1104,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":821,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":822,"nodeType":"StructuredDocumentation","src":"126:67:8","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1103,"linearizedBaseContracts":[1103],"name":"AddressUpgradeable","nameLocation":"202:18:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":836,"nodeType":"Block","src":"1252:254:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":830,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"1476:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1476:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1476:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1498:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":829,"id":835,"nodeType":"Return","src":"1469:30:8"}]},"documentation":{"id":823,"nodeType":"StructuredDocumentation","src":"227:954:8","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":837,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1195:10:8","nodeType":"FunctionDefinition","parameters":{"id":826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"mutability":"mutable","name":"account","nameLocation":"1214:7:8","nodeType":"VariableDeclaration","scope":837,"src":"1206:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":824,"name":"address","nodeType":"ElementaryTypeName","src":"1206:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1205:17:8"},"returnParameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":837,"src":"1246:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":827,"name":"bool","nodeType":"ElementaryTypeName","src":"1246:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1245:6:8"},"scope":1103,"src":"1186:320:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":870,"nodeType":"Block","src":"2494:241:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":848,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2520:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1103","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1103","typeString":"library AddressUpgradeable"}],"id":847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2512:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"2512:7:8","typeDescriptions":{}}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2512:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2512:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":851,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"2537:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2512:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2545:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":845,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2504:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2504:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":855,"nodeType":"ExpressionStatement","src":"2504:73:8"},{"assignments":[857,null],"declarations":[{"constant":false,"id":857,"mutability":"mutable","name":"success","nameLocation":"2594:7:8","nodeType":"VariableDeclaration","scope":870,"src":"2589:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":856,"name":"bool","nodeType":"ElementaryTypeName","src":"2589:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":864,"initialValue":{"arguments":[{"hexValue":"","id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2637:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":858,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"2607:9:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2607:14:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":860,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"2629:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2607:29:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2607:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2588:52:8"},{"expression":{"arguments":[{"id":866,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"2658:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2667:60:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":865,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2650:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2650:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":869,"nodeType":"ExpressionStatement","src":"2650:78:8"}]},"documentation":{"id":838,"nodeType":"StructuredDocumentation","src":"1512:906:8","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":871,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2432:9:8","nodeType":"FunctionDefinition","parameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":840,"mutability":"mutable","name":"recipient","nameLocation":"2458:9:8","nodeType":"VariableDeclaration","scope":871,"src":"2442:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"2442:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":842,"mutability":"mutable","name":"amount","nameLocation":"2477:6:8","nodeType":"VariableDeclaration","scope":871,"src":"2469:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":841,"name":"uint256","nodeType":"ElementaryTypeName","src":"2469:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2441:43:8"},"returnParameters":{"id":844,"nodeType":"ParameterList","parameters":[],"src":"2494:0:8"},"scope":1103,"src":"2423:312:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":888,"nodeType":"Block","src":"3566:96:8","statements":[{"expression":{"arguments":[{"id":882,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"3605:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":883,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"3613:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3619:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3622:32:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":881,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[929,973],"referencedDeclaration":973,"src":"3583:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3583:72:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":880,"id":887,"nodeType":"Return","src":"3576:79:8"}]},"documentation":{"id":872,"nodeType":"StructuredDocumentation","src":"2741:731:8","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":889,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3486:12:8","nodeType":"FunctionDefinition","parameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"target","nameLocation":"3507:6:8","nodeType":"VariableDeclaration","scope":889,"src":"3499:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"3499:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":876,"mutability":"mutable","name":"data","nameLocation":"3528:4:8","nodeType":"VariableDeclaration","scope":889,"src":"3515:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":875,"name":"bytes","nodeType":"ElementaryTypeName","src":"3515:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3498:35:8"},"returnParameters":{"id":880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":889,"src":"3552:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":878,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3551:14:8"},"scope":1103,"src":"3477:185:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":908,"nodeType":"Block","src":"4031:76:8","statements":[{"expression":{"arguments":[{"id":902,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"4070:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":903,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"4078:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4084:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":905,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"4087:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":901,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[929,973],"referencedDeclaration":973,"src":"4048:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4048:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":900,"id":907,"nodeType":"Return","src":"4041:59:8"}]},"documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"3668:211:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":909,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3893:12:8","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"target","nameLocation":"3923:6:8","nodeType":"VariableDeclaration","scope":909,"src":"3915:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"3915:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"data","nameLocation":"3952:4:8","nodeType":"VariableDeclaration","scope":909,"src":"3939:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":893,"name":"bytes","nodeType":"ElementaryTypeName","src":"3939:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"errorMessage","nameLocation":"3980:12:8","nodeType":"VariableDeclaration","scope":909,"src":"3966:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":895,"name":"string","nodeType":"ElementaryTypeName","src":"3966:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3905:93:8"},"returnParameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":909,"src":"4017:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":898,"name":"bytes","nodeType":"ElementaryTypeName","src":"4017:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4016:14:8"},"scope":1103,"src":"3884:223:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":928,"nodeType":"Block","src":"4612:111:8","statements":[{"expression":{"arguments":[{"id":922,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"4651:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":923,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"4659:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"4665:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4672:43:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":921,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[929,973],"referencedDeclaration":973,"src":"4629:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4629:87:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":920,"id":927,"nodeType":"Return","src":"4622:94:8"}]},"documentation":{"id":910,"nodeType":"StructuredDocumentation","src":"4113:351:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":929,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4478:21:8","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":912,"mutability":"mutable","name":"target","nameLocation":"4517:6:8","nodeType":"VariableDeclaration","scope":929,"src":"4509:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":911,"name":"address","nodeType":"ElementaryTypeName","src":"4509:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":914,"mutability":"mutable","name":"data","nameLocation":"4546:4:8","nodeType":"VariableDeclaration","scope":929,"src":"4533:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":913,"name":"bytes","nodeType":"ElementaryTypeName","src":"4533:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"value","nameLocation":"4568:5:8","nodeType":"VariableDeclaration","scope":929,"src":"4560:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":915,"name":"uint256","nodeType":"ElementaryTypeName","src":"4560:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4499:80:8"},"returnParameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":929,"src":"4598:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":918,"name":"bytes","nodeType":"ElementaryTypeName","src":"4598:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4597:14:8"},"scope":1103,"src":"4469:254:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":972,"nodeType":"Block","src":"5150:267:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":946,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5176:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1103","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1103","typeString":"library AddressUpgradeable"}],"id":945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5168:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":944,"name":"address","nodeType":"ElementaryTypeName","src":"5168:7:8","typeDescriptions":{}}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5168:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5168:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"5193:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5168:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5200:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":943,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5160:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5160:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":953,"nodeType":"ExpressionStatement","src":"5160:81:8"},{"assignments":[955,957],"declarations":[{"constant":false,"id":955,"mutability":"mutable","name":"success","nameLocation":"5257:7:8","nodeType":"VariableDeclaration","scope":972,"src":"5252:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":954,"name":"bool","nodeType":"ElementaryTypeName","src":"5252:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":957,"mutability":"mutable","name":"returndata","nameLocation":"5279:10:8","nodeType":"VariableDeclaration","scope":972,"src":"5266:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":956,"name":"bytes","nodeType":"ElementaryTypeName","src":"5266:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":964,"initialValue":{"arguments":[{"id":962,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"5319:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":958,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"5293:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5293:11:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"5312:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5293:25:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5293:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5251:73:8"},{"expression":{"arguments":[{"id":966,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"5368:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":967,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"5376:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":968,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"5385:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":969,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"5397:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":965,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"5341:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5341:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":942,"id":971,"nodeType":"Return","src":"5334:76:8"}]},"documentation":{"id":930,"nodeType":"StructuredDocumentation","src":"4729:237:8","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":973,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4980:21:8","nodeType":"FunctionDefinition","parameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":932,"mutability":"mutable","name":"target","nameLocation":"5019:6:8","nodeType":"VariableDeclaration","scope":973,"src":"5011:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":931,"name":"address","nodeType":"ElementaryTypeName","src":"5011:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":934,"mutability":"mutable","name":"data","nameLocation":"5048:4:8","nodeType":"VariableDeclaration","scope":973,"src":"5035:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":933,"name":"bytes","nodeType":"ElementaryTypeName","src":"5035:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":936,"mutability":"mutable","name":"value","nameLocation":"5070:5:8","nodeType":"VariableDeclaration","scope":973,"src":"5062:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":935,"name":"uint256","nodeType":"ElementaryTypeName","src":"5062:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":938,"mutability":"mutable","name":"errorMessage","nameLocation":"5099:12:8","nodeType":"VariableDeclaration","scope":973,"src":"5085:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":937,"name":"string","nodeType":"ElementaryTypeName","src":"5085:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5001:116:8"},"returnParameters":{"id":942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":973,"src":"5136:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":940,"name":"bytes","nodeType":"ElementaryTypeName","src":"5136:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5135:14:8"},"scope":1103,"src":"4971:446:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":989,"nodeType":"Block","src":"5694:97:8","statements":[{"expression":{"arguments":[{"id":984,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"5730:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":985,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"5738:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5744:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":983,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[990,1019],"referencedDeclaration":1019,"src":"5711:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5711:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":982,"id":988,"nodeType":"Return","src":"5704:80:8"}]},"documentation":{"id":974,"nodeType":"StructuredDocumentation","src":"5423:166:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":990,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5603:18:8","nodeType":"FunctionDefinition","parameters":{"id":979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":976,"mutability":"mutable","name":"target","nameLocation":"5630:6:8","nodeType":"VariableDeclaration","scope":990,"src":"5622:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"5622:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":978,"mutability":"mutable","name":"data","nameLocation":"5651:4:8","nodeType":"VariableDeclaration","scope":990,"src":"5638:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":977,"name":"bytes","nodeType":"ElementaryTypeName","src":"5638:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5621:35:8"},"returnParameters":{"id":982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":990,"src":"5680:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":980,"name":"bytes","nodeType":"ElementaryTypeName","src":"5680:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5679:14:8"},"scope":1103,"src":"5594:197:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1018,"nodeType":"Block","src":"6133:168:8","statements":[{"assignments":[1003,1005],"declarations":[{"constant":false,"id":1003,"mutability":"mutable","name":"success","nameLocation":"6149:7:8","nodeType":"VariableDeclaration","scope":1018,"src":"6144:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1002,"name":"bool","nodeType":"ElementaryTypeName","src":"6144:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1005,"mutability":"mutable","name":"returndata","nameLocation":"6171:10:8","nodeType":"VariableDeclaration","scope":1018,"src":"6158:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1004,"name":"bytes","nodeType":"ElementaryTypeName","src":"6158:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1010,"initialValue":{"arguments":[{"id":1008,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"6203:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1006,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"6185:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6185:17:8","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6185:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6143:65:8"},{"expression":{"arguments":[{"id":1012,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"6252:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1013,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"6260:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1014,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"6269:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1015,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"6281:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1011,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"6225:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6225:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1001,"id":1017,"nodeType":"Return","src":"6218:76:8"}]},"documentation":{"id":991,"nodeType":"StructuredDocumentation","src":"5797:173:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1019,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5984:18:8","nodeType":"FunctionDefinition","parameters":{"id":998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":993,"mutability":"mutable","name":"target","nameLocation":"6020:6:8","nodeType":"VariableDeclaration","scope":1019,"src":"6012:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":992,"name":"address","nodeType":"ElementaryTypeName","src":"6012:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":995,"mutability":"mutable","name":"data","nameLocation":"6049:4:8","nodeType":"VariableDeclaration","scope":1019,"src":"6036:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":994,"name":"bytes","nodeType":"ElementaryTypeName","src":"6036:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":997,"mutability":"mutable","name":"errorMessage","nameLocation":"6077:12:8","nodeType":"VariableDeclaration","scope":1019,"src":"6063:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":996,"name":"string","nodeType":"ElementaryTypeName","src":"6063:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6002:93:8"},"returnParameters":{"id":1001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1019,"src":"6119:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":999,"name":"bytes","nodeType":"ElementaryTypeName","src":"6119:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6118:14:8"},"scope":1103,"src":"5975:326:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1057,"nodeType":"Block","src":"6783:434:8","statements":[{"condition":{"id":1033,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"6797:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1055,"nodeType":"Block","src":"7153:58:8","statements":[{"expression":{"arguments":[{"id":1051,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"7175:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1052,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"7187:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1050,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"7167:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7167:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1054,"nodeType":"ExpressionStatement","src":"7167:33:8"}]},"id":1056,"nodeType":"IfStatement","src":"6793:418:8","trueBody":{"id":1049,"nodeType":"Block","src":"6806:341:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1034,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"6824:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6824:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6845:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6824:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1046,"nodeType":"IfStatement","src":"6820:286:8","trueBody":{"id":1045,"nodeType":"Block","src":"6848:258:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1040,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"7050:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1039,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"7039:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7039:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7059:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1038,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7031:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7031:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1044,"nodeType":"ExpressionStatement","src":"7031:60:8"}]}},{"expression":{"id":1047,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"7126:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1032,"id":1048,"nodeType":"Return","src":"7119:17:8"}]}}]},"documentation":{"id":1020,"nodeType":"StructuredDocumentation","src":"6307:277:8","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1058,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"6598:26:8","nodeType":"FunctionDefinition","parameters":{"id":1029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1022,"mutability":"mutable","name":"target","nameLocation":"6642:6:8","nodeType":"VariableDeclaration","scope":1058,"src":"6634:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1021,"name":"address","nodeType":"ElementaryTypeName","src":"6634:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1024,"mutability":"mutable","name":"success","nameLocation":"6663:7:8","nodeType":"VariableDeclaration","scope":1058,"src":"6658:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1023,"name":"bool","nodeType":"ElementaryTypeName","src":"6658:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1026,"mutability":"mutable","name":"returndata","nameLocation":"6693:10:8","nodeType":"VariableDeclaration","scope":1058,"src":"6680:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1025,"name":"bytes","nodeType":"ElementaryTypeName","src":"6680:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1028,"mutability":"mutable","name":"errorMessage","nameLocation":"6727:12:8","nodeType":"VariableDeclaration","scope":1058,"src":"6713:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1027,"name":"string","nodeType":"ElementaryTypeName","src":"6713:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6624:121:8"},"returnParameters":{"id":1032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1058,"src":"6769:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1030,"name":"bytes","nodeType":"ElementaryTypeName","src":"6769:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6768:14:8"},"scope":1103,"src":"6589:628:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1081,"nodeType":"Block","src":"7598:135:8","statements":[{"condition":{"id":1070,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"7612:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1079,"nodeType":"Block","src":"7669:58:8","statements":[{"expression":{"arguments":[{"id":1075,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"7691:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1076,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"7703:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1074,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"7683:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7683:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1078,"nodeType":"ExpressionStatement","src":"7683:33:8"}]},"id":1080,"nodeType":"IfStatement","src":"7608:119:8","trueBody":{"id":1073,"nodeType":"Block","src":"7621:42:8","statements":[{"expression":{"id":1071,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"7642:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1069,"id":1072,"nodeType":"Return","src":"7635:17:8"}]}}]},"documentation":{"id":1059,"nodeType":"StructuredDocumentation","src":"7223:210:8","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1082,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7447:16:8","nodeType":"FunctionDefinition","parameters":{"id":1066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1061,"mutability":"mutable","name":"success","nameLocation":"7478:7:8","nodeType":"VariableDeclaration","scope":1082,"src":"7473:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1060,"name":"bool","nodeType":"ElementaryTypeName","src":"7473:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1063,"mutability":"mutable","name":"returndata","nameLocation":"7508:10:8","nodeType":"VariableDeclaration","scope":1082,"src":"7495:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1062,"name":"bytes","nodeType":"ElementaryTypeName","src":"7495:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1065,"mutability":"mutable","name":"errorMessage","nameLocation":"7542:12:8","nodeType":"VariableDeclaration","scope":1082,"src":"7528:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1064,"name":"string","nodeType":"ElementaryTypeName","src":"7528:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:97:8"},"returnParameters":{"id":1069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1082,"src":"7584:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1067,"name":"bytes","nodeType":"ElementaryTypeName","src":"7584:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:14:8"},"scope":1103,"src":"7438:295:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1101,"nodeType":"Block","src":"7822:457:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1089,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"7898:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7898:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7918:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7898:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1099,"nodeType":"Block","src":"8228:45:8","statements":[{"expression":{"arguments":[{"id":1096,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"8249:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1095,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8242:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8242:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1098,"nodeType":"ExpressionStatement","src":"8242:20:8"}]},"id":1100,"nodeType":"IfStatement","src":"7894:379:8","trueBody":{"id":1094,"nodeType":"Block","src":"7921:301:8","statements":[{"AST":{"nodeType":"YulBlock","src":"8079:133:8","statements":[{"nodeType":"YulVariableDeclaration","src":"8097:40:8","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8126:10:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8120:5:8"},"nodeType":"YulFunctionCall","src":"8120:17:8"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8101:15:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8165:2:8","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8169:10:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8161:3:8"},"nodeType":"YulFunctionCall","src":"8161:19:8"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8182:15:8"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8154:6:8"},"nodeType":"YulFunctionCall","src":"8154:44:8"},"nodeType":"YulExpressionStatement","src":"8154:44:8"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1084,"isOffset":false,"isSlot":false,"src":"8126:10:8","valueSize":1},{"declaration":1084,"isOffset":false,"isSlot":false,"src":"8169:10:8","valueSize":1}],"id":1093,"nodeType":"InlineAssembly","src":"8070:142:8"}]}}]},"id":1102,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"7748:7:8","nodeType":"FunctionDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1084,"mutability":"mutable","name":"returndata","nameLocation":"7769:10:8","nodeType":"VariableDeclaration","scope":1102,"src":"7756:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1083,"name":"bytes","nodeType":"ElementaryTypeName","src":"7756:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1086,"mutability":"mutable","name":"errorMessage","nameLocation":"7795:12:8","nodeType":"VariableDeclaration","scope":1102,"src":"7781:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1085,"name":"string","nodeType":"ElementaryTypeName","src":"7781:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7755:53:8"},"returnParameters":{"id":1088,"nodeType":"ParameterList","parameters":[],"src":"7822:0:8"},"scope":1103,"src":"7739:540:8","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1104,"src":"194:8087:8","usedErrors":[]}],"src":"101:8181:8"},"id":8},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1103],"ContextUpgradeable":[1145],"Initializable":[303]},"id":1146,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1105,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:9"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1106,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1146,"sourceUnit":304,"src":"110:42:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1108,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":303,"src":"691:13:9"},"id":1109,"nodeType":"InheritanceSpecifier","src":"691:13:9"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1107,"nodeType":"StructuredDocumentation","src":"154:496:9","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1145,"linearizedBaseContracts":[1145,303],"name":"ContextUpgradeable","nameLocation":"669:18:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1114,"nodeType":"Block","src":"763:7:9","statements":[]},"id":1115,"implemented":true,"kind":"function","modifiers":[{"id":1112,"kind":"modifierInvocation","modifierName":{"id":1111,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":248,"src":"746:16:9"},"nodeType":"ModifierInvocation","src":"746:16:9"}],"name":"__Context_init","nameLocation":"720:14:9","nodeType":"FunctionDefinition","parameters":{"id":1110,"nodeType":"ParameterList","parameters":[],"src":"734:2:9"},"returnParameters":{"id":1113,"nodeType":"ParameterList","parameters":[],"src":"763:0:9"},"scope":1145,"src":"711:59:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1120,"nodeType":"Block","src":"838:7:9","statements":[]},"id":1121,"implemented":true,"kind":"function","modifiers":[{"id":1118,"kind":"modifierInvocation","modifierName":{"id":1117,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":248,"src":"821:16:9"},"nodeType":"ModifierInvocation","src":"821:16:9"}],"name":"__Context_init_unchained","nameLocation":"785:24:9","nodeType":"FunctionDefinition","parameters":{"id":1116,"nodeType":"ParameterList","parameters":[],"src":"809:2:9"},"returnParameters":{"id":1119,"nodeType":"ParameterList","parameters":[],"src":"838:0:9"},"scope":1145,"src":"776:69:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1129,"nodeType":"Block","src":"912:34:9","statements":[{"expression":{"expression":{"id":1126,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"929:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1125,"id":1128,"nodeType":"Return","src":"922:17:9"}]},"id":1130,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:9","nodeType":"FunctionDefinition","parameters":{"id":1122,"nodeType":"ParameterList","parameters":[],"src":"869:2:9"},"returnParameters":{"id":1125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1130,"src":"903:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:9"},"scope":1145,"src":"850:96:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1138,"nodeType":"Block","src":"1019:32:9","statements":[{"expression":{"expression":{"id":1135,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"1036:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1134,"id":1137,"nodeType":"Return","src":"1029:15:9"}]},"id":1139,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:9","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[],"src":"969:2:9"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1139,"src":"1003:14:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1132,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:9"},"scope":1145,"src":"952:99:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1140,"nodeType":"StructuredDocumentation","src":"1057:254:9","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1144,"mutability":"mutable","name":"__gap","nameLocation":"1336:5:9","nodeType":"VariableDeclaration","scope":1145,"src":"1316:25:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1143,"length":{"hexValue":"3530","id":1142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:9","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1146,"src":"651:693:9","usedErrors":[]}],"src":"86:1259:9"},"id":9},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1103],"ERC165Upgradeable":[1189],"IERC165Upgradeable":[1201],"Initializable":[303]},"id":1190,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1147,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:10"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","file":"./IERC165Upgradeable.sol","id":1148,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1190,"sourceUnit":1202,"src":"124:34:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":1149,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1190,"sourceUnit":304,"src":"159:45:10","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1151,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":303,"src":"822:13:10"},"id":1152,"nodeType":"InheritanceSpecifier","src":"822:13:10"},{"baseName":{"id":1153,"name":"IERC165Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1201,"src":"837:18:10"},"id":1154,"nodeType":"InheritanceSpecifier","src":"837:18:10"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1150,"nodeType":"StructuredDocumentation","src":"206:576:10","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":1189,"linearizedBaseContracts":[1189,1201,303],"name":"ERC165Upgradeable","nameLocation":"801:17:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1159,"nodeType":"Block","src":"913:7:10","statements":[]},"id":1160,"implemented":true,"kind":"function","modifiers":[{"id":1157,"kind":"modifierInvocation","modifierName":{"id":1156,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":248,"src":"896:16:10"},"nodeType":"ModifierInvocation","src":"896:16:10"}],"name":"__ERC165_init","nameLocation":"871:13:10","nodeType":"FunctionDefinition","parameters":{"id":1155,"nodeType":"ParameterList","parameters":[],"src":"884:2:10"},"returnParameters":{"id":1158,"nodeType":"ParameterList","parameters":[],"src":"913:0:10"},"scope":1189,"src":"862:58:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1165,"nodeType":"Block","src":"987:7:10","statements":[]},"id":1166,"implemented":true,"kind":"function","modifiers":[{"id":1163,"kind":"modifierInvocation","modifierName":{"id":1162,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":248,"src":"970:16:10"},"nodeType":"ModifierInvocation","src":"970:16:10"}],"name":"__ERC165_init_unchained","nameLocation":"935:23:10","nodeType":"FunctionDefinition","parameters":{"id":1161,"nodeType":"ParameterList","parameters":[],"src":"958:2:10"},"returnParameters":{"id":1164,"nodeType":"ParameterList","parameters":[],"src":"987:0:10"},"scope":1189,"src":"926:68:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1200],"body":{"id":1182,"nodeType":"Block","src":"1151:75:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1175,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"1168:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1177,"name":"IERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"1188:18:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165Upgradeable_$1201_$","typeString":"type(contract IERC165Upgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165Upgradeable_$1201_$","typeString":"type(contract IERC165Upgradeable)"}],"id":1176,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1183:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1183:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165Upgradeable_$1201","typeString":"type(contract IERC165Upgradeable)"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1183:36:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1168:51:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1174,"id":1181,"nodeType":"Return","src":"1161:58:10"}]},"documentation":{"id":1167,"nodeType":"StructuredDocumentation","src":"999:56:10","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1183,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1069:17:10","nodeType":"FunctionDefinition","overrides":{"id":1171,"nodeType":"OverrideSpecifier","overrides":[],"src":"1127:8:10"},"parameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1169,"mutability":"mutable","name":"interfaceId","nameLocation":"1094:11:10","nodeType":"VariableDeclaration","scope":1183,"src":"1087:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1168,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1087:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1086:20:10"},"returnParameters":{"id":1174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1183,"src":"1145:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1172,"name":"bool","nodeType":"ElementaryTypeName","src":"1145:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1144:6:10"},"scope":1189,"src":"1060:166:10","stateMutability":"view","virtual":true,"visibility":"public"},{"constant":false,"documentation":{"id":1184,"nodeType":"StructuredDocumentation","src":"1232:254:10","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1188,"mutability":"mutable","name":"__gap","nameLocation":"1511:5:10","nodeType":"VariableDeclaration","scope":1189,"src":"1491:25:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1185,"name":"uint256","nodeType":"ElementaryTypeName","src":"1491:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1187,"length":{"hexValue":"3530","id":1186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1499:2:10","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1491:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1190,"src":"783:736:10","usedErrors":[]}],"src":"99:1421:10"},"id":10},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","exportedSymbols":{"IERC165Upgradeable":[1201]},"id":1202,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1191,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1192,"nodeType":"StructuredDocumentation","src":"125:279:11","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1201,"linearizedBaseContracts":[1201],"name":"IERC165Upgradeable","nameLocation":"415:18:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1193,"nodeType":"StructuredDocumentation","src":"440:340:11","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1200,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"794:17:11","nodeType":"FunctionDefinition","parameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1195,"mutability":"mutable","name":"interfaceId","nameLocation":"819:11:11","nodeType":"VariableDeclaration","scope":1200,"src":"812:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1194,"name":"bytes4","nodeType":"ElementaryTypeName","src":"812:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"811:20:11"},"returnParameters":{"id":1199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1200,"src":"855:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1197,"name":"bool","nodeType":"ElementaryTypeName","src":"855:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"854:6:11"},"scope":1201,"src":"785:76:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1202,"src":"405:458:11","usedErrors":[]}],"src":"100:764:11"},"id":11},"contracts/Maketplace.sol":{"ast":{"absolutePath":"contracts/Maketplace.sol","exportedSymbols":{"AddressUpgradeable":[1103],"ContextUpgradeable":[1145],"ERC165Upgradeable":[1189],"IERC1155Upgradeable":[625],"IERC165Upgradeable":[1201],"IERC20Upgradeable":[703],"IERC721Upgradeable":[819],"Initializable":[303],"Maketplace":[1289],"OwnableUpgradeable":[131],"PausableUpgradeable":[430],"ReentrancyGuardUpgradeable":[503]},"id":1290,"license":"Unlicensed","nodeType":"SourceUnit","nodes":[{"id":1203,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"40:23:12"},{"absolutePath":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","id":1204,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1290,"sourceUnit":504,"src":"67:85:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","id":1205,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1290,"sourceUnit":431,"src":"154:78:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol","id":1206,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1290,"sourceUnit":626,"src":"234:83:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol","id":1207,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1290,"sourceUnit":820,"src":"319:81:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","id":1208,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1290,"sourceUnit":1104,"src":"404:74:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","id":1209,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1290,"sourceUnit":1190,"src":"480:87:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/interfaces/IERC20Upgradeable.sol","id":1210,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1290,"sourceUnit":135,"src":"571:78:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":1211,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1290,"sourceUnit":132,"src":"651:75:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IToken.sol","file":"./interfaces/IToken.sol","id":1212,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1290,"sourceUnit":1291,"src":"728:33:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1213,"name":"OwnableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":131,"src":"788:18:12"},"id":1214,"nodeType":"InheritanceSpecifier","src":"788:18:12"},{"baseName":{"id":1215,"name":"PausableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":430,"src":"808:19:12"},"id":1216,"nodeType":"InheritanceSpecifier","src":"808:19:12"}],"canonicalName":"Maketplace","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1289,"linearizedBaseContracts":[1289,430,131,1145,303],"name":"Maketplace","nameLocation":"774:10:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":1227,"nodeType":"Block","src":"876:83:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1221,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"887:25:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"887:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1223,"nodeType":"ExpressionStatement","src":"887:27:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1224,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"925:24:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"925:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1226,"nodeType":"ExpressionStatement","src":"925:26:12"}]},"functionSelector":"8129fc1c","id":1228,"implemented":true,"kind":"function","modifiers":[{"id":1219,"kind":"modifierInvocation","modifierName":{"id":1218,"name":"initializer","nodeType":"IdentifierPath","referencedDeclaration":205,"src":"865:11:12"},"nodeType":"ModifierInvocation","src":"865:11:12"}],"name":"initialize","nameLocation":"845:10:12","nodeType":"FunctionDefinition","parameters":{"id":1217,"nodeType":"ParameterList","parameters":[],"src":"855:2:12"},"returnParameters":{"id":1220,"nodeType":"ParameterList","parameters":[],"src":"876:0:12"},"scope":1289,"src":"836:123:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1245,"nodeType":"Block","src":"1214:56:12","statements":[{"expression":{"expression":{"expression":{"id":1241,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1232:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Maketplace_$1289","typeString":"contract Maketplace"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1246,"src":"1232:21:12","typeDescriptions":{"typeIdentifier":"t_function_external_pure$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) pure external returns (bytes4)"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1232:30:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":1240,"id":1244,"nodeType":"Return","src":"1225:37:12"}]},"functionSelector":"150b7a02","id":1246,"implemented":true,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"1080:16:12","nodeType":"FunctionDefinition","parameters":{"id":1237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1246,"src":"1107:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1229,"name":"address","nodeType":"ElementaryTypeName","src":"1107:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1246,"src":"1125:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1231,"name":"address","nodeType":"ElementaryTypeName","src":"1125:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1246,"src":"1143:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1233,"name":"uint256","nodeType":"ElementaryTypeName","src":"1143:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1246,"src":"1161:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1235,"name":"bytes","nodeType":"ElementaryTypeName","src":"1161:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1096:86:12"},"returnParameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1246,"src":"1206:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1238,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1206:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1205:8:12"},"scope":1289,"src":"1071:199:12","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":1265,"nodeType":"Block","src":"1438:57:12","statements":[{"expression":{"expression":{"expression":{"id":1261,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1456:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Maketplace_$1289","typeString":"contract Maketplace"}},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1266,"src":"1456:22:12","typeDescriptions":{"typeIdentifier":"t_function_external_pure$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) pure external returns (bytes4)"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1456:31:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":1260,"id":1264,"nodeType":"Return","src":"1449:38:12"}]},"functionSelector":"f23a6e61","id":1266,"implemented":true,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1287:17:12","nodeType":"FunctionDefinition","parameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1266,"src":"1315:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1247,"name":"address","nodeType":"ElementaryTypeName","src":"1315:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1266,"src":"1333:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1249,"name":"address","nodeType":"ElementaryTypeName","src":"1333:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1266,"src":"1351:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1251,"name":"uint256","nodeType":"ElementaryTypeName","src":"1351:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1266,"src":"1369:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1253,"name":"uint256","nodeType":"ElementaryTypeName","src":"1369:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1266,"src":"1387:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1255,"name":"bytes","nodeType":"ElementaryTypeName","src":"1387:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1304:104:12"},"returnParameters":{"id":1260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1266,"src":"1430:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1258,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1430:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1429:8:12"},"scope":1289,"src":"1278:217:12","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":1287,"nodeType":"Block","src":"1692:62:12","statements":[{"expression":{"expression":{"expression":{"id":1283,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1710:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Maketplace_$1289","typeString":"contract Maketplace"}},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1288,"src":"1710:27:12","typeDescriptions":{"typeIdentifier":"t_function_external_pure$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) pure external returns (bytes4)"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1710:36:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":1282,"id":1286,"nodeType":"Return","src":"1703:43:12"}]},"functionSelector":"bc197c81","id":1288,"implemented":true,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"1512:22:12","nodeType":"FunctionDefinition","parameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1288,"src":"1545:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1267,"name":"address","nodeType":"ElementaryTypeName","src":"1545:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1288,"src":"1563:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1269,"name":"address","nodeType":"ElementaryTypeName","src":"1563:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1288,"src":"1581:18:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1271,"name":"uint256","nodeType":"ElementaryTypeName","src":"1581:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1272,"nodeType":"ArrayTypeName","src":"1581:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1288,"src":"1610:18:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1274,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1275,"nodeType":"ArrayTypeName","src":"1610:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1288,"src":"1639:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1277,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1534:126:12"},"returnParameters":{"id":1282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1281,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1288,"src":"1684:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1280,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1684:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1683:8:12"},"scope":1289,"src":"1503:251:12","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":1290,"src":"765:992:12","usedErrors":[]}],"src":"40:1717:12"},"id":12},"contracts/interfaces/IToken.sol":{"ast":{"absolutePath":"contracts/interfaces/IToken.sol","exportedSymbols":{},"id":1291,"nodeType":"SourceUnit","nodes":[],"src":"0:0:13"},"id":13}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":141,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":144,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1144,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":10,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":130,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":141,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":144,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":141,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":144,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1144,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":324,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_paused","offset":0,"slot":"51","type":"t_bool"},{"astId":429,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"ReentrancyGuardUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2b3005a0064cfc558bdf64b2bae94b565f4574a536aadd61c13838d4f2157790\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://622c3eb87563e71585c9f538d1a196fe2d154dcc5b8f335e8770a8acc95e1f3a\",\"dweb:/ipfs/QmSnDqJJLzv3mirjGB1vrk5X7hegFdS7BKpscpxyqj7sWu\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":141,"contract":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":144,"contract":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":444,"contract":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable","label":"_status","offset":0,"slot":"1","type":"t_uint256"},{"astId":502,"contract":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable","label":"__gap","offset":0,"slot":"2","type":"t_array(t_uint256)49_storage"}],"types":{"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol":{"IERC1155Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":\"IERC1155Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0x091a49ef99a2be002680781a10cc9dd74c0f348301ede5482c4ea625f79a8ffe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e037192cadfd20ad0f1b0c54a0c770a1ba551e7d0fcb6d3708e5ba352f88ded2\",\"dweb:/ipfs/QmTXwY6odV1ToDZAYxbbLKThe9M5PUWTmWBjwT776hH4qm\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"IERC20Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol":{"IERC721Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":\"IERC721Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0x2c0b89cef83f353c6f9488c013d8a5968587ffdd6dfc26aad53774214b97e229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a68e662c2a82412308b1feb24f3d61a44b3b8772f44cbd440446237313c3195\",\"dweb:/ipfs/QmfBuWUE2TQef9hghDzzuVkDskw3UGAyPgLmPifTNV7K6g\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e5f091026cd77ca8c0f5f0cec1b34803a836ce5c9f10a12195c64a21aa1159e64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0x5F MULMOD LT 0x26 0xCD PUSH24 0xCA8C0F5F0CEC1B34803A836CE5C9F10A12195C64A21AA115 SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"194:8087:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8087:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e5f091026cd77ca8c0f5f0cec1b34803a836ce5c9f10a12195c64a21aa1159e64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0x5F MULMOD LT 0x26 0xCD PUSH24 0xCA8C0F5F0CEC1B34803A836CE5C9F10A12195C64A21AA115 SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"194:8087:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":141,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":144,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1144,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":141,"contract":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":144,"contract":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1188,"contract":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"IERC165Upgradeable":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/Maketplace.sol":{"Maketplace":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610708806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100f2578063bc197c811461010d578063f23a6e611461012f578063f2fde38b1461014f57600080fd5b8063150b7a021461008d5780635c975abb146100ca578063715018a6146100e05780638129fc1c146100ea575b600080fd5b6100ac61009b36600461047e565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b60655460ff1660405190151581526020016100c1565b6100e8610162565b005b6100e8610176565b6033546040516001600160a01b0390911681526020016100c1565b6100ac61011b366004610532565b63bc197c8160e01b98975050505050505050565b6100ac61013d3660046105ed565b63f23a6e6160e01b9695505050505050565b6100e861015d366004610665565b610294565b61016a61030a565b6101746000610364565b565b600054610100900460ff16158080156101965750600054600160ff909116105b806101b05750303b1580156101b0575060005460ff166001145b6102185760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801561023b576000805461ff0019166101001790555b6102436103b6565b61024b6103e9565b8015610291576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b61029c61030a565b6001600160a01b0381166103015760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161020f565b61029181610364565b6033546001600160a01b031633146101745760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161020f565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166103dd5760405162461bcd60e51b815260040161020f90610687565b6065805460ff19169055565b600054610100900460ff166104105760405162461bcd60e51b815260040161020f90610687565b61017433610364565b80356001600160a01b038116811461043057600080fd5b919050565b60008083601f84011261044757600080fd5b50813567ffffffffffffffff81111561045f57600080fd5b60208301915083602082850101111561047757600080fd5b9250929050565b60008060008060006080868803121561049657600080fd5b61049f86610419565b94506104ad60208701610419565b935060408601359250606086013567ffffffffffffffff8111156104d057600080fd5b6104dc88828901610435565b969995985093965092949392505050565b60008083601f8401126104ff57600080fd5b50813567ffffffffffffffff81111561051757600080fd5b6020830191508360208260051b850101111561047757600080fd5b60008060008060008060008060a0898b03121561054e57600080fd5b61055789610419565b975061056560208a01610419565b9650604089013567ffffffffffffffff8082111561058257600080fd5b61058e8c838d016104ed565b909850965060608b01359150808211156105a757600080fd5b6105b38c838d016104ed565b909650945060808b01359150808211156105cc57600080fd5b506105d98b828c01610435565b999c989b5096995094979396929594505050565b60008060008060008060a0878903121561060657600080fd5b61060f87610419565b955061061d60208801610419565b94506040870135935060608701359250608087013567ffffffffffffffff81111561064757600080fd5b61065389828a01610435565b979a9699509497509295939492505050565b60006020828403121561067757600080fd5b61068082610419565b9392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea26469706673582212200b08f10bd6f75de432a739ff61ba317775e2381bdf9d6b5c1a6eb1af709bd14b64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x708 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0xEA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAC PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x47E JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC1 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0x162 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE8 PUSH2 0x176 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC1 JUMP JUMPDEST PUSH2 0xAC PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x532 JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAC PUSH2 0x13D CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE8 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x665 JUMP JUMPDEST PUSH2 0x294 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x30A JUMP JUMPDEST PUSH2 0x174 PUSH1 0x0 PUSH2 0x364 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x196 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x1B0 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B0 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x218 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x243 PUSH2 0x3B6 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x3E9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x29C PUSH2 0x30A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x301 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20F JUMP JUMPDEST PUSH2 0x291 DUP2 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x174 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x20F JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20F SWAP1 PUSH2 0x687 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20F SWAP1 PUSH2 0x687 JUMP JUMPDEST PUSH2 0x174 CALLER PUSH2 0x364 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x49F DUP7 PUSH2 0x419 JUMP JUMPDEST SWAP5 POP PUSH2 0x4AD PUSH1 0x20 DUP8 ADD PUSH2 0x419 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4DC DUP9 DUP3 DUP10 ADD PUSH2 0x435 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x557 DUP10 PUSH2 0x419 JUMP JUMPDEST SWAP8 POP PUSH2 0x565 PUSH1 0x20 DUP11 ADD PUSH2 0x419 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x58E DUP13 DUP4 DUP14 ADD PUSH2 0x4ED JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x5A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5B3 DUP13 DUP4 DUP14 ADD PUSH2 0x4ED JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D9 DUP12 DUP3 DUP13 ADD PUSH2 0x435 JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60F DUP8 PUSH2 0x419 JUMP JUMPDEST SWAP6 POP PUSH2 0x61D PUSH1 0x20 DUP9 ADD PUSH2 0x419 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x653 DUP10 DUP3 DUP11 ADD PUSH2 0x435 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x680 DUP3 PUSH2 0x419 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND ADDMOD CALL SIGNEXTEND 0xD6 0xF7 0x5D 0xE4 ORIGIN 0xA7 CODECOPY SELFDESTRUCT PUSH2 0xBA31 PUSH24 0x75E2381BDF9D6B5C1A6EB1AF709BD14B64736F6C63430008 MULMOD STOP CALLER ","sourceMap":"765:992:12:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@__Ownable_init_unchained_37":{"entryPoint":1001,"id":37,"parameterSlots":0,"returnSlots":0},"@__Pausable_init_unchained_344":{"entryPoint":950,"id":344,"parameterSlots":0,"returnSlots":0},"@_checkOwner_68":{"entryPoint":778,"id":68,"parameterSlots":0,"returnSlots":0},"@_msgSender_1130":{"entryPoint":null,"id":1130,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_125":{"entryPoint":868,"id":125,"parameterSlots":1,"returnSlots":0},"@initialize_1228":{"entryPoint":374,"id":1228,"parameterSlots":0,"returnSlots":0},"@isContract_837":{"entryPoint":null,"id":837,"parameterSlots":1,"returnSlots":1},"@onERC1155BatchReceived_1288":{"entryPoint":null,"id":1288,"parameterSlots":8,"returnSlots":1},"@onERC1155Received_1266":{"entryPoint":null,"id":1266,"parameterSlots":6,"returnSlots":1},"@onERC721Received_1246":{"entryPoint":null,"id":1246,"parameterSlots":5,"returnSlots":1},"@owner_54":{"entryPoint":null,"id":54,"parameterSlots":0,"returnSlots":1},"@paused_369":{"entryPoint":null,"id":369,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_82":{"entryPoint":354,"id":82,"parameterSlots":0,"returnSlots":0},"@transferOwnership_105":{"entryPoint":660,"id":105,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":1049,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_uint256_dyn_calldata":{"entryPoint":1261,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bytes_calldata":{"entryPoint":1077,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":1637,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":1330,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":1150,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr":{"entryPoint":1517,"id":null,"parameterSlots":2,"returnSlots":6},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1671,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6051:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:14","statements":[{"nodeType":"YulAssignment","src":"73:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:14"},"nodeType":"YulFunctionCall","src":"82:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:14"}]},{"body":{"nodeType":"YulBlock","src":"165:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:14"},"nodeType":"YulFunctionCall","src":"167:12:14"},"nodeType":"YulExpressionStatement","src":"167:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:14"},"nodeType":"YulFunctionCall","src":"146:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:14"},"nodeType":"YulFunctionCall","src":"142:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:14"},"nodeType":"YulFunctionCall","src":"131:31:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:14"},"nodeType":"YulFunctionCall","src":"121:42:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:14"},"nodeType":"YulFunctionCall","src":"114:50:14"},"nodeType":"YulIf","src":"111:70:14"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:14","type":""}],"src":"14:173:14"},{"body":{"nodeType":"YulBlock","src":"264:275:14","statements":[{"body":{"nodeType":"YulBlock","src":"313:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"322:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"325:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"315:6:14"},"nodeType":"YulFunctionCall","src":"315:12:14"},"nodeType":"YulExpressionStatement","src":"315:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"292:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"300:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"288:3:14"},"nodeType":"YulFunctionCall","src":"288:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"307:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"284:3:14"},"nodeType":"YulFunctionCall","src":"284:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"277:6:14"},"nodeType":"YulFunctionCall","src":"277:35:14"},"nodeType":"YulIf","src":"274:55:14"},{"nodeType":"YulAssignment","src":"338:30:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"361:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"348:12:14"},"nodeType":"YulFunctionCall","src":"348:20:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"338:6:14"}]},{"body":{"nodeType":"YulBlock","src":"411:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"420:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"423:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"413:6:14"},"nodeType":"YulFunctionCall","src":"413:12:14"},"nodeType":"YulExpressionStatement","src":"413:12:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"383:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"391:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"380:2:14"},"nodeType":"YulFunctionCall","src":"380:30:14"},"nodeType":"YulIf","src":"377:50:14"},{"nodeType":"YulAssignment","src":"436:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"452:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"460:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"448:3:14"},"nodeType":"YulFunctionCall","src":"448:17:14"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"436:8:14"}]},{"body":{"nodeType":"YulBlock","src":"517:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:14"},"nodeType":"YulFunctionCall","src":"519:12:14"},"nodeType":"YulExpressionStatement","src":"519:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"488:6:14"},{"name":"length","nodeType":"YulIdentifier","src":"496:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"484:3:14"},"nodeType":"YulFunctionCall","src":"484:19:14"},{"kind":"number","nodeType":"YulLiteral","src":"505:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"480:3:14"},"nodeType":"YulFunctionCall","src":"480:30:14"},{"name":"end","nodeType":"YulIdentifier","src":"512:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"477:2:14"},"nodeType":"YulFunctionCall","src":"477:39:14"},"nodeType":"YulIf","src":"474:59:14"}]},"name":"abi_decode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"227:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"235:3:14","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"243:8:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"253:6:14","type":""}],"src":"192:347:14"},{"body":{"nodeType":"YulBlock","src":"684:486:14","statements":[{"body":{"nodeType":"YulBlock","src":"731:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"740:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"743:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"733:6:14"},"nodeType":"YulFunctionCall","src":"733:12:14"},"nodeType":"YulExpressionStatement","src":"733:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"705:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"714:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"701:3:14"},"nodeType":"YulFunctionCall","src":"701:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"726:3:14","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"697:3:14"},"nodeType":"YulFunctionCall","src":"697:33:14"},"nodeType":"YulIf","src":"694:53:14"},{"nodeType":"YulAssignment","src":"756:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"785:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"766:18:14"},"nodeType":"YulFunctionCall","src":"766:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"756:6:14"}]},{"nodeType":"YulAssignment","src":"804:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"837:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"848:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"833:3:14"},"nodeType":"YulFunctionCall","src":"833:18:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"814:18:14"},"nodeType":"YulFunctionCall","src":"814:38:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"804:6:14"}]},{"nodeType":"YulAssignment","src":"861:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"888:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"899:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"884:3:14"},"nodeType":"YulFunctionCall","src":"884:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"871:12:14"},"nodeType":"YulFunctionCall","src":"871:32:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"861:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"912:46:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"943:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"954:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"939:3:14"},"nodeType":"YulFunctionCall","src":"939:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"926:12:14"},"nodeType":"YulFunctionCall","src":"926:32:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"916:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1001:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1010:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1013:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1003:6:14"},"nodeType":"YulFunctionCall","src":"1003:12:14"},"nodeType":"YulExpressionStatement","src":"1003:12:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"973:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"981:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"970:2:14"},"nodeType":"YulFunctionCall","src":"970:30:14"},"nodeType":"YulIf","src":"967:50:14"},{"nodeType":"YulVariableDeclaration","src":"1026:84:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1082:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"1093:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1078:3:14"},"nodeType":"YulFunctionCall","src":"1078:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1102:7:14"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"1052:25:14"},"nodeType":"YulFunctionCall","src":"1052:58:14"},"variables":[{"name":"value3_1","nodeType":"YulTypedName","src":"1030:8:14","type":""},{"name":"value4_1","nodeType":"YulTypedName","src":"1040:8:14","type":""}]},{"nodeType":"YulAssignment","src":"1119:18:14","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"1129:8:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1119:6:14"}]},{"nodeType":"YulAssignment","src":"1146:18:14","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"1156:8:14"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1146:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"618:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"629:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"641:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"649:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"657:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"665:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"673:6:14","type":""}],"src":"544:626:14"},{"body":{"nodeType":"YulBlock","src":"1274:103:14","statements":[{"nodeType":"YulAssignment","src":"1284:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1296:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1307:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1292:3:14"},"nodeType":"YulFunctionCall","src":"1292:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1284:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1326:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1341:6:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1353:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1358:10:14","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1349:3:14"},"nodeType":"YulFunctionCall","src":"1349:20:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1337:3:14"},"nodeType":"YulFunctionCall","src":"1337:33:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1319:6:14"},"nodeType":"YulFunctionCall","src":"1319:52:14"},"nodeType":"YulExpressionStatement","src":"1319:52:14"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1243:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1254:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1265:4:14","type":""}],"src":"1175:202:14"},{"body":{"nodeType":"YulBlock","src":"1477:92:14","statements":[{"nodeType":"YulAssignment","src":"1487:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1499:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1510:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1495:3:14"},"nodeType":"YulFunctionCall","src":"1495:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1487:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1529:9:14"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1554:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1547:6:14"},"nodeType":"YulFunctionCall","src":"1547:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1540:6:14"},"nodeType":"YulFunctionCall","src":"1540:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1522:6:14"},"nodeType":"YulFunctionCall","src":"1522:41:14"},"nodeType":"YulExpressionStatement","src":"1522:41:14"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1446:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1457:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1468:4:14","type":""}],"src":"1382:187:14"},{"body":{"nodeType":"YulBlock","src":"1675:102:14","statements":[{"nodeType":"YulAssignment","src":"1685:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1697:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1708:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1693:3:14"},"nodeType":"YulFunctionCall","src":"1693:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1685:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1727:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1742:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1758:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1763:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1754:3:14"},"nodeType":"YulFunctionCall","src":"1754:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"1767:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1750:3:14"},"nodeType":"YulFunctionCall","src":"1750:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1738:3:14"},"nodeType":"YulFunctionCall","src":"1738:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1720:6:14"},"nodeType":"YulFunctionCall","src":"1720:51:14"},"nodeType":"YulExpressionStatement","src":"1720:51:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1644:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1655:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1666:4:14","type":""}],"src":"1574:203:14"},{"body":{"nodeType":"YulBlock","src":"1866:283:14","statements":[{"body":{"nodeType":"YulBlock","src":"1915:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1924:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1927:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1917:6:14"},"nodeType":"YulFunctionCall","src":"1917:12:14"},"nodeType":"YulExpressionStatement","src":"1917:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1894:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1902:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1890:3:14"},"nodeType":"YulFunctionCall","src":"1890:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"1909:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1886:3:14"},"nodeType":"YulFunctionCall","src":"1886:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1879:6:14"},"nodeType":"YulFunctionCall","src":"1879:35:14"},"nodeType":"YulIf","src":"1876:55:14"},{"nodeType":"YulAssignment","src":"1940:30:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1963:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1950:12:14"},"nodeType":"YulFunctionCall","src":"1950:20:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1940:6:14"}]},{"body":{"nodeType":"YulBlock","src":"2013:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2022:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2025:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2015:6:14"},"nodeType":"YulFunctionCall","src":"2015:12:14"},"nodeType":"YulExpressionStatement","src":"2015:12:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1985:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1993:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1982:2:14"},"nodeType":"YulFunctionCall","src":"1982:30:14"},"nodeType":"YulIf","src":"1979:50:14"},{"nodeType":"YulAssignment","src":"2038:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2054:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2062:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2050:3:14"},"nodeType":"YulFunctionCall","src":"2050:17:14"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2038:8:14"}]},{"body":{"nodeType":"YulBlock","src":"2127:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2136:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2139:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2129:6:14"},"nodeType":"YulFunctionCall","src":"2129:12:14"},"nodeType":"YulExpressionStatement","src":"2129:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2090:6:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2102:1:14","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"2105:6:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2098:3:14"},"nodeType":"YulFunctionCall","src":"2098:14:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2086:3:14"},"nodeType":"YulFunctionCall","src":"2086:27:14"},{"kind":"number","nodeType":"YulLiteral","src":"2115:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2082:3:14"},"nodeType":"YulFunctionCall","src":"2082:38:14"},{"name":"end","nodeType":"YulIdentifier","src":"2122:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2079:2:14"},"nodeType":"YulFunctionCall","src":"2079:47:14"},"nodeType":"YulIf","src":"2076:67:14"}]},"name":"abi_decode_array_uint256_dyn_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1829:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"1837:3:14","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1845:8:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"1855:6:14","type":""}],"src":"1782:367:14"},{"body":{"nodeType":"YulBlock","src":"2381:983:14","statements":[{"body":{"nodeType":"YulBlock","src":"2428:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2437:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2440:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2430:6:14"},"nodeType":"YulFunctionCall","src":"2430:12:14"},"nodeType":"YulExpressionStatement","src":"2430:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2402:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2411:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2398:3:14"},"nodeType":"YulFunctionCall","src":"2398:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2423:3:14","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2394:3:14"},"nodeType":"YulFunctionCall","src":"2394:33:14"},"nodeType":"YulIf","src":"2391:53:14"},{"nodeType":"YulAssignment","src":"2453:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2482:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2463:18:14"},"nodeType":"YulFunctionCall","src":"2463:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2453:6:14"}]},{"nodeType":"YulAssignment","src":"2501:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2534:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2545:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2530:3:14"},"nodeType":"YulFunctionCall","src":"2530:18:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2511:18:14"},"nodeType":"YulFunctionCall","src":"2511:38:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2501:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"2558:46:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2589:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2600:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2585:3:14"},"nodeType":"YulFunctionCall","src":"2585:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2572:12:14"},"nodeType":"YulFunctionCall","src":"2572:32:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2562:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2613:28:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2623:18:14","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2617:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2668:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2677:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2680:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2670:6:14"},"nodeType":"YulFunctionCall","src":"2670:12:14"},"nodeType":"YulExpressionStatement","src":"2670:12:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2656:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"2664:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2653:2:14"},"nodeType":"YulFunctionCall","src":"2653:14:14"},"nodeType":"YulIf","src":"2650:34:14"},{"nodeType":"YulVariableDeclaration","src":"2693:96:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2761:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2772:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2757:3:14"},"nodeType":"YulFunctionCall","src":"2757:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2781:7:14"}],"functionName":{"name":"abi_decode_array_uint256_dyn_calldata","nodeType":"YulIdentifier","src":"2719:37:14"},"nodeType":"YulFunctionCall","src":"2719:70:14"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"2697:8:14","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"2707:8:14","type":""}]},{"nodeType":"YulAssignment","src":"2798:18:14","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"2808:8:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2798:6:14"}]},{"nodeType":"YulAssignment","src":"2825:18:14","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"2835:8:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2825:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"2852:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2885:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2896:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2881:3:14"},"nodeType":"YulFunctionCall","src":"2881:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2868:12:14"},"nodeType":"YulFunctionCall","src":"2868:32:14"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"2856:8:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2929:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2938:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2941:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2931:6:14"},"nodeType":"YulFunctionCall","src":"2931:12:14"},"nodeType":"YulExpressionStatement","src":"2931:12:14"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"2915:8:14"},{"name":"_1","nodeType":"YulIdentifier","src":"2925:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2912:2:14"},"nodeType":"YulFunctionCall","src":"2912:16:14"},"nodeType":"YulIf","src":"2909:36:14"},{"nodeType":"YulVariableDeclaration","src":"2954:98:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3022:9:14"},{"name":"offset_1","nodeType":"YulIdentifier","src":"3033:8:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3018:3:14"},"nodeType":"YulFunctionCall","src":"3018:24:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3044:7:14"}],"functionName":{"name":"abi_decode_array_uint256_dyn_calldata","nodeType":"YulIdentifier","src":"2980:37:14"},"nodeType":"YulFunctionCall","src":"2980:72:14"},"variables":[{"name":"value4_1","nodeType":"YulTypedName","src":"2958:8:14","type":""},{"name":"value5_1","nodeType":"YulTypedName","src":"2968:8:14","type":""}]},{"nodeType":"YulAssignment","src":"3061:18:14","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"3071:8:14"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3061:6:14"}]},{"nodeType":"YulAssignment","src":"3088:18:14","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"3098:8:14"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"3088:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"3115:49:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3148:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3159:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3144:3:14"},"nodeType":"YulFunctionCall","src":"3144:19:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3131:12:14"},"nodeType":"YulFunctionCall","src":"3131:33:14"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"3119:8:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3193:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3202:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3205:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3195:6:14"},"nodeType":"YulFunctionCall","src":"3195:12:14"},"nodeType":"YulExpressionStatement","src":"3195:12:14"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"3179:8:14"},{"name":"_1","nodeType":"YulIdentifier","src":"3189:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3176:2:14"},"nodeType":"YulFunctionCall","src":"3176:16:14"},"nodeType":"YulIf","src":"3173:36:14"},{"nodeType":"YulVariableDeclaration","src":"3218:86:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3274:9:14"},{"name":"offset_2","nodeType":"YulIdentifier","src":"3285:8:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3270:3:14"},"nodeType":"YulFunctionCall","src":"3270:24:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3296:7:14"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"3244:25:14"},"nodeType":"YulFunctionCall","src":"3244:60:14"},"variables":[{"name":"value6_1","nodeType":"YulTypedName","src":"3222:8:14","type":""},{"name":"value7_1","nodeType":"YulTypedName","src":"3232:8:14","type":""}]},{"nodeType":"YulAssignment","src":"3313:18:14","value":{"name":"value6_1","nodeType":"YulIdentifier","src":"3323:8:14"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"3313:6:14"}]},{"nodeType":"YulAssignment","src":"3340:18:14","value":{"name":"value7_1","nodeType":"YulIdentifier","src":"3350:8:14"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"3340:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2291:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2302:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2314:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2322:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2330:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2338:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2346:6:14","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2354:6:14","type":""},{"name":"value6","nodeType":"YulTypedName","src":"2362:6:14","type":""},{"name":"value7","nodeType":"YulTypedName","src":"2370:6:14","type":""}],"src":"2154:1210:14"},{"body":{"nodeType":"YulBlock","src":"3526:538:14","statements":[{"body":{"nodeType":"YulBlock","src":"3573:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3582:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3585:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3575:6:14"},"nodeType":"YulFunctionCall","src":"3575:12:14"},"nodeType":"YulExpressionStatement","src":"3575:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3547:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3556:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3543:3:14"},"nodeType":"YulFunctionCall","src":"3543:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"3568:3:14","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3539:3:14"},"nodeType":"YulFunctionCall","src":"3539:33:14"},"nodeType":"YulIf","src":"3536:53:14"},{"nodeType":"YulAssignment","src":"3598:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3627:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3608:18:14"},"nodeType":"YulFunctionCall","src":"3608:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3598:6:14"}]},{"nodeType":"YulAssignment","src":"3646:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3679:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3690:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3675:3:14"},"nodeType":"YulFunctionCall","src":"3675:18:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3656:18:14"},"nodeType":"YulFunctionCall","src":"3656:38:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3646:6:14"}]},{"nodeType":"YulAssignment","src":"3703:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3730:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3741:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3726:3:14"},"nodeType":"YulFunctionCall","src":"3726:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3713:12:14"},"nodeType":"YulFunctionCall","src":"3713:32:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3703:6:14"}]},{"nodeType":"YulAssignment","src":"3754:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3781:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3792:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3777:3:14"},"nodeType":"YulFunctionCall","src":"3777:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3764:12:14"},"nodeType":"YulFunctionCall","src":"3764:32:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3754:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"3805:47:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3836:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3847:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3832:3:14"},"nodeType":"YulFunctionCall","src":"3832:19:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3819:12:14"},"nodeType":"YulFunctionCall","src":"3819:33:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3809:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3895:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3904:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3907:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3897:6:14"},"nodeType":"YulFunctionCall","src":"3897:12:14"},"nodeType":"YulExpressionStatement","src":"3897:12:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3867:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3875:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3864:2:14"},"nodeType":"YulFunctionCall","src":"3864:30:14"},"nodeType":"YulIf","src":"3861:50:14"},{"nodeType":"YulVariableDeclaration","src":"3920:84:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3976:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3987:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3972:3:14"},"nodeType":"YulFunctionCall","src":"3972:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3996:7:14"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"3946:25:14"},"nodeType":"YulFunctionCall","src":"3946:58:14"},"variables":[{"name":"value4_1","nodeType":"YulTypedName","src":"3924:8:14","type":""},{"name":"value5_1","nodeType":"YulTypedName","src":"3934:8:14","type":""}]},{"nodeType":"YulAssignment","src":"4013:18:14","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"4023:8:14"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4013:6:14"}]},{"nodeType":"YulAssignment","src":"4040:18:14","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"4050:8:14"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"4040:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3452:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3463:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3475:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3483:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3491:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3499:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3507:6:14","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3515:6:14","type":""}],"src":"3369:695:14"},{"body":{"nodeType":"YulBlock","src":"4139:116:14","statements":[{"body":{"nodeType":"YulBlock","src":"4185:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4194:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4197:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4187:6:14"},"nodeType":"YulFunctionCall","src":"4187:12:14"},"nodeType":"YulExpressionStatement","src":"4187:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4160:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"4169:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4156:3:14"},"nodeType":"YulFunctionCall","src":"4156:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4181:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4152:3:14"},"nodeType":"YulFunctionCall","src":"4152:32:14"},"nodeType":"YulIf","src":"4149:52:14"},{"nodeType":"YulAssignment","src":"4210:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4239:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4220:18:14"},"nodeType":"YulFunctionCall","src":"4220:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4210:6:14"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4105:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4116:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4128:6:14","type":""}],"src":"4069:186:14"},{"body":{"nodeType":"YulBlock","src":"4434:236:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4451:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4462:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4444:6:14"},"nodeType":"YulFunctionCall","src":"4444:21:14"},"nodeType":"YulExpressionStatement","src":"4444:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4485:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4496:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4481:3:14"},"nodeType":"YulFunctionCall","src":"4481:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"4501:2:14","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4474:6:14"},"nodeType":"YulFunctionCall","src":"4474:30:14"},"nodeType":"YulExpressionStatement","src":"4474:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4524:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4535:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4520:3:14"},"nodeType":"YulFunctionCall","src":"4520:18:14"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"4540:34:14","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4513:6:14"},"nodeType":"YulFunctionCall","src":"4513:62:14"},"nodeType":"YulExpressionStatement","src":"4513:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4595:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4606:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4591:3:14"},"nodeType":"YulFunctionCall","src":"4591:18:14"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"4611:16:14","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4584:6:14"},"nodeType":"YulFunctionCall","src":"4584:44:14"},"nodeType":"YulExpressionStatement","src":"4584:44:14"},{"nodeType":"YulAssignment","src":"4637:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4649:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4660:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4645:3:14"},"nodeType":"YulFunctionCall","src":"4645:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4637:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4411:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4425:4:14","type":""}],"src":"4260:410:14"},{"body":{"nodeType":"YulBlock","src":"4782:87:14","statements":[{"nodeType":"YulAssignment","src":"4792:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4804:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4815:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4800:3:14"},"nodeType":"YulFunctionCall","src":"4800:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4792:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4834:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4849:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4857:4:14","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4845:3:14"},"nodeType":"YulFunctionCall","src":"4845:17:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4827:6:14"},"nodeType":"YulFunctionCall","src":"4827:36:14"},"nodeType":"YulExpressionStatement","src":"4827:36:14"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4751:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4762:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4773:4:14","type":""}],"src":"4675:194:14"},{"body":{"nodeType":"YulBlock","src":"5048:228:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5065:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5076:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5058:6:14"},"nodeType":"YulFunctionCall","src":"5058:21:14"},"nodeType":"YulExpressionStatement","src":"5058:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5099:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5110:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5095:3:14"},"nodeType":"YulFunctionCall","src":"5095:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"5115:2:14","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5088:6:14"},"nodeType":"YulFunctionCall","src":"5088:30:14"},"nodeType":"YulExpressionStatement","src":"5088:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5138:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5149:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5134:3:14"},"nodeType":"YulFunctionCall","src":"5134:18:14"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"5154:34:14","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5127:6:14"},"nodeType":"YulFunctionCall","src":"5127:62:14"},"nodeType":"YulExpressionStatement","src":"5127:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5209:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5220:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5205:3:14"},"nodeType":"YulFunctionCall","src":"5205:18:14"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"5225:8:14","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5198:6:14"},"nodeType":"YulFunctionCall","src":"5198:36:14"},"nodeType":"YulExpressionStatement","src":"5198:36:14"},{"nodeType":"YulAssignment","src":"5243:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5255:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5266:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5251:3:14"},"nodeType":"YulFunctionCall","src":"5251:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5243:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5025:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5039:4:14","type":""}],"src":"4874:402:14"},{"body":{"nodeType":"YulBlock","src":"5455:182:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5472:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5483:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5465:6:14"},"nodeType":"YulFunctionCall","src":"5465:21:14"},"nodeType":"YulExpressionStatement","src":"5465:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5506:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5517:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5502:3:14"},"nodeType":"YulFunctionCall","src":"5502:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"5522:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5495:6:14"},"nodeType":"YulFunctionCall","src":"5495:30:14"},"nodeType":"YulExpressionStatement","src":"5495:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5545:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5556:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5541:3:14"},"nodeType":"YulFunctionCall","src":"5541:18:14"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"5561:34:14","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5534:6:14"},"nodeType":"YulFunctionCall","src":"5534:62:14"},"nodeType":"YulExpressionStatement","src":"5534:62:14"},{"nodeType":"YulAssignment","src":"5605:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5617:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5628:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5613:3:14"},"nodeType":"YulFunctionCall","src":"5613:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5605:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5432:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5446:4:14","type":""}],"src":"5281:356:14"},{"body":{"nodeType":"YulBlock","src":"5816:233:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5833:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5844:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5826:6:14"},"nodeType":"YulFunctionCall","src":"5826:21:14"},"nodeType":"YulExpressionStatement","src":"5826:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5867:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5878:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5863:3:14"},"nodeType":"YulFunctionCall","src":"5863:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"5883:2:14","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5856:6:14"},"nodeType":"YulFunctionCall","src":"5856:30:14"},"nodeType":"YulExpressionStatement","src":"5856:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5906:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5917:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5902:3:14"},"nodeType":"YulFunctionCall","src":"5902:18:14"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"5922:34:14","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5895:6:14"},"nodeType":"YulFunctionCall","src":"5895:62:14"},"nodeType":"YulExpressionStatement","src":"5895:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5977:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5988:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5973:3:14"},"nodeType":"YulFunctionCall","src":"5973:18:14"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"5993:13:14","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5966:6:14"},"nodeType":"YulFunctionCall","src":"5966:41:14"},"nodeType":"YulExpressionStatement","src":"5966:41:14"},{"nodeType":"YulAssignment","src":"6016:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6028:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6039:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6024:3:14"},"nodeType":"YulFunctionCall","src":"6024:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6016:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5793:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5807:4:14","type":""}],"src":"5642:407:14"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_array_uint256_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_uint256_dyn_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_array_uint256_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value6_1, value7_1 := abi_decode_bytes_calldata(add(headStart, offset_2), dataEnd)\n        value6 := value6_1\n        value7 := value7_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100f2578063bc197c811461010d578063f23a6e611461012f578063f2fde38b1461014f57600080fd5b8063150b7a021461008d5780635c975abb146100ca578063715018a6146100e05780638129fc1c146100ea575b600080fd5b6100ac61009b36600461047e565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b60655460ff1660405190151581526020016100c1565b6100e8610162565b005b6100e8610176565b6033546040516001600160a01b0390911681526020016100c1565b6100ac61011b366004610532565b63bc197c8160e01b98975050505050505050565b6100ac61013d3660046105ed565b63f23a6e6160e01b9695505050505050565b6100e861015d366004610665565b610294565b61016a61030a565b6101746000610364565b565b600054610100900460ff16158080156101965750600054600160ff909116105b806101b05750303b1580156101b0575060005460ff166001145b6102185760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801561023b576000805461ff0019166101001790555b6102436103b6565b61024b6103e9565b8015610291576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b61029c61030a565b6001600160a01b0381166103015760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161020f565b61029181610364565b6033546001600160a01b031633146101745760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161020f565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166103dd5760405162461bcd60e51b815260040161020f90610687565b6065805460ff19169055565b600054610100900460ff166104105760405162461bcd60e51b815260040161020f90610687565b61017433610364565b80356001600160a01b038116811461043057600080fd5b919050565b60008083601f84011261044757600080fd5b50813567ffffffffffffffff81111561045f57600080fd5b60208301915083602082850101111561047757600080fd5b9250929050565b60008060008060006080868803121561049657600080fd5b61049f86610419565b94506104ad60208701610419565b935060408601359250606086013567ffffffffffffffff8111156104d057600080fd5b6104dc88828901610435565b969995985093965092949392505050565b60008083601f8401126104ff57600080fd5b50813567ffffffffffffffff81111561051757600080fd5b6020830191508360208260051b850101111561047757600080fd5b60008060008060008060008060a0898b03121561054e57600080fd5b61055789610419565b975061056560208a01610419565b9650604089013567ffffffffffffffff8082111561058257600080fd5b61058e8c838d016104ed565b909850965060608b01359150808211156105a757600080fd5b6105b38c838d016104ed565b909650945060808b01359150808211156105cc57600080fd5b506105d98b828c01610435565b999c989b5096995094979396929594505050565b60008060008060008060a0878903121561060657600080fd5b61060f87610419565b955061061d60208801610419565b94506040870135935060608701359250608087013567ffffffffffffffff81111561064757600080fd5b61065389828a01610435565b979a9699509497509295939492505050565b60006020828403121561067757600080fd5b61068082610419565b9392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea26469706673582212200b08f10bd6f75de432a739ff61ba317775e2381bdf9d6b5c1a6eb1af709bd14b64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0xEA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAC PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x47E JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC1 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0x162 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE8 PUSH2 0x176 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC1 JUMP JUMPDEST PUSH2 0xAC PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x532 JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAC PUSH2 0x13D CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE8 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x665 JUMP JUMPDEST PUSH2 0x294 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x30A JUMP JUMPDEST PUSH2 0x174 PUSH1 0x0 PUSH2 0x364 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x196 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x1B0 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B0 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x218 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x243 PUSH2 0x3B6 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x3E9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x29C PUSH2 0x30A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x301 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20F JUMP JUMPDEST PUSH2 0x291 DUP2 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x174 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x20F JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20F SWAP1 PUSH2 0x687 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20F SWAP1 PUSH2 0x687 JUMP JUMPDEST PUSH2 0x174 CALLER PUSH2 0x364 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x49F DUP7 PUSH2 0x419 JUMP JUMPDEST SWAP5 POP PUSH2 0x4AD PUSH1 0x20 DUP8 ADD PUSH2 0x419 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4DC DUP9 DUP3 DUP10 ADD PUSH2 0x435 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x557 DUP10 PUSH2 0x419 JUMP JUMPDEST SWAP8 POP PUSH2 0x565 PUSH1 0x20 DUP11 ADD PUSH2 0x419 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x58E DUP13 DUP4 DUP14 ADD PUSH2 0x4ED JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x5A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5B3 DUP13 DUP4 DUP14 ADD PUSH2 0x4ED JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D9 DUP12 DUP3 DUP13 ADD PUSH2 0x435 JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60F DUP8 PUSH2 0x419 JUMP JUMPDEST SWAP6 POP PUSH2 0x61D PUSH1 0x20 DUP9 ADD PUSH2 0x419 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x653 DUP10 DUP3 DUP11 ADD PUSH2 0x435 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x680 DUP3 PUSH2 0x419 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND ADDMOD CALL SIGNEXTEND 0xD6 0xF7 0x5D 0xE4 ORIGIN 0xA7 CODECOPY SELFDESTRUCT PUSH2 0xBA31 PUSH24 0x75E2381BDF9D6B5C1A6EB1AF709BD14B64736F6C63430008 MULMOD STOP CALLER ","sourceMap":"765:992:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1071:199;;;;;;:::i;:::-;-1:-1:-1;;;1071:199:12;;;;;;;;;;;-1:-1:-1;;;;;;1337:33:14;;;1319:52;;1307:2;1292:18;1071:199:12;;;;;;;;1858:84:3;1928:7;;;;1858:84;;1547:14:14;;1540:22;1522:41;;1510:2;1495:18;1858:84:3;1382:187:14;2071:101:0;;;:::i;:::-;;836:123:12;;;:::i;1441:85:0:-;1513:6;;1441:85;;-1:-1:-1;;;;;1513:6:0;;;1720:51:14;;1708:2;1693:18;1441:85:0;1574:203:14;1503:251:12;;;;;;:::i;:::-;-1:-1:-1;;;1503:251:12;;;;;;;;;;;1278:217;;;;;;:::i;:::-;-1:-1:-1;;;1278:217:12;;;;;;;;;2321:198:0;;;;;;:::i;:::-;;:::i;2071:101::-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;836:123:12:-;3268:19:2;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:2;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;-1:-1:-1;3415:4:2;1476:19:8;:23;;;3376:66:2;;-1:-1:-1;3425:12:2;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:2;;4462:2:14;3314:201:2;;;4444:21:14;4501:2;4481:18;;;4474:30;4540:34;4520:18;;;4513:62;-1:-1:-1;;;4591:18:14;;;4584:44;4645:19;;3314:201:2;;;;;;;;;3525:12;:16;;-1:-1:-1;;3525:16:2;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:2;;;;;3551:65;887:27:12::1;:25;:27::i;:::-;925:26;:24;:26::i;:::-;3640:14:2::0;3636:99;;;3686:5;3670:21;;-1:-1:-1;;3670:21:2;;;3710:14;;-1:-1:-1;4827:36:14;;3710:14:2;;4815:2:14;4800:18;3710:14:2;;;;;;;3636:99;3258:483;836:123:12:o;2321:198:0:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:0;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:0;;5076:2:14;2401:73:0::1;::::0;::::1;5058:21:14::0;5115:2;5095:18;;;5088:30;5154:34;5134:18;;;5127:62;-1:-1:-1;;;5205:18:14;;;5198:36;5251:19;;2401:73:0::1;4874:402:14::0;2401:73:0::1;2484:28;2503:8;2484:18;:28::i;1599:130::-:0;1513:6;;-1:-1:-1;;;;;1513:6:0;929:10:9;1662:23:0;1654:68;;;;-1:-1:-1;;;1654:68:0;;5483:2:14;1654:68:0;;;5465:21:14;;;5502:18;;;5495:30;5561:34;5541:18;;;5534:62;5613:18;;1654:68:0;5281:356:14;2673:187:0;2765:6;;;-1:-1:-1;;;;;2781:17:0;;;-1:-1:-1;;;;;;2781:17:0;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;1166:95:3:-;5363:13:2;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:2;;;;;;;:::i;:::-;1239:7:3::1;:15:::0;;-1:-1:-1;;1239:15:3::1;::::0;;1166:95::o;1104:111:0:-;5363:13:2;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:2;;;;;;;:::i;:::-;1176:32:0::1;929:10:9::0;1176:18:0::1;:32::i;14:173:14:-:0;82:20;;-1:-1:-1;;;;;131:31:14;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:347::-;243:8;253:6;307:3;300:4;292:6;288:17;284:27;274:55;;325:1;322;315:12;274:55;-1:-1:-1;348:20:14;;391:18;380:30;;377:50;;;423:1;420;413:12;377:50;460:4;452:6;448:17;436:29;;512:3;505:4;496:6;488;484:19;480:30;477:39;474:59;;;529:1;526;519:12;474:59;192:347;;;;;:::o;544:626::-;641:6;649;657;665;673;726:3;714:9;705:7;701:23;697:33;694:53;;;743:1;740;733:12;694:53;766:29;785:9;766:29;:::i;:::-;756:39;;814:38;848:2;837:9;833:18;814:38;:::i;:::-;804:48;;899:2;888:9;884:18;871:32;861:42;;954:2;943:9;939:18;926:32;981:18;973:6;970:30;967:50;;;1013:1;1010;1003:12;967:50;1052:58;1102:7;1093:6;1082:9;1078:22;1052:58;:::i;:::-;544:626;;;;-1:-1:-1;544:626:14;;-1:-1:-1;1129:8:14;;1026:84;544:626;-1:-1:-1;;;544:626:14:o;1782:367::-;1845:8;1855:6;1909:3;1902:4;1894:6;1890:17;1886:27;1876:55;;1927:1;1924;1917:12;1876:55;-1:-1:-1;1950:20:14;;1993:18;1982:30;;1979:50;;;2025:1;2022;2015:12;1979:50;2062:4;2054:6;2050:17;2038:29;;2122:3;2115:4;2105:6;2102:1;2098:14;2090:6;2086:27;2082:38;2079:47;2076:67;;;2139:1;2136;2129:12;2154:1210;2314:6;2322;2330;2338;2346;2354;2362;2370;2423:3;2411:9;2402:7;2398:23;2394:33;2391:53;;;2440:1;2437;2430:12;2391:53;2463:29;2482:9;2463:29;:::i;:::-;2453:39;;2511:38;2545:2;2534:9;2530:18;2511:38;:::i;:::-;2501:48;;2600:2;2589:9;2585:18;2572:32;2623:18;2664:2;2656:6;2653:14;2650:34;;;2680:1;2677;2670:12;2650:34;2719:70;2781:7;2772:6;2761:9;2757:22;2719:70;:::i;:::-;2808:8;;-1:-1:-1;2693:96:14;-1:-1:-1;2896:2:14;2881:18;;2868:32;;-1:-1:-1;2912:16:14;;;2909:36;;;2941:1;2938;2931:12;2909:36;2980:72;3044:7;3033:8;3022:9;3018:24;2980:72;:::i;:::-;3071:8;;-1:-1:-1;2954:98:14;-1:-1:-1;3159:3:14;3144:19;;3131:33;;-1:-1:-1;3176:16:14;;;3173:36;;;3205:1;3202;3195:12;3173:36;;3244:60;3296:7;3285:8;3274:9;3270:24;3244:60;:::i;:::-;2154:1210;;;;-1:-1:-1;2154:1210:14;;-1:-1:-1;2154:1210:14;;;;;;3323:8;-1:-1:-1;;;2154:1210:14:o;3369:695::-;3475:6;3483;3491;3499;3507;3515;3568:3;3556:9;3547:7;3543:23;3539:33;3536:53;;;3585:1;3582;3575:12;3536:53;3608:29;3627:9;3608:29;:::i;:::-;3598:39;;3656:38;3690:2;3679:9;3675:18;3656:38;:::i;:::-;3646:48;;3741:2;3730:9;3726:18;3713:32;3703:42;;3792:2;3781:9;3777:18;3764:32;3754:42;;3847:3;3836:9;3832:19;3819:33;3875:18;3867:6;3864:30;3861:50;;;3907:1;3904;3897:12;3861:50;3946:58;3996:7;3987:6;3976:9;3972:22;3946:58;:::i;:::-;3369:695;;;;-1:-1:-1;3369:695:14;;-1:-1:-1;3369:695:14;;4023:8;;3369:695;-1:-1:-1;;;3369:695:14:o;4069:186::-;4128:6;4181:2;4169:9;4160:7;4156:23;4152:32;4149:52;;;4197:1;4194;4187:12;4149:52;4220:29;4239:9;4220:29;:::i;:::-;4210:39;4069:186;-1:-1:-1;;;4069:186:14:o;5642:407::-;5844:2;5826:21;;;5883:2;5863:18;;;5856:30;5922:34;5917:2;5902:18;;5895:62;-1:-1:-1;;;5988:2:14;5973:18;;5966:41;6039:3;6024:19;;5642:407::o"},"methodIdentifiers":{"initialize()":"8129fc1c","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","onERC721Received(address,address,uint256,bytes)":"150b7a02","owner()":"8da5cb5b","paused()":"5c975abb","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Maketplace.sol\":\"Maketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/interfaces/IERC20Upgradeable.sol\":{\"keccak256\":\"0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5\",\"dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2b3005a0064cfc558bdf64b2bae94b565f4574a536aadd61c13838d4f2157790\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://622c3eb87563e71585c9f538d1a196fe2d154dcc5b8f335e8770a8acc95e1f3a\",\"dweb:/ipfs/QmSnDqJJLzv3mirjGB1vrk5X7hegFdS7BKpscpxyqj7sWu\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0x091a49ef99a2be002680781a10cc9dd74c0f348301ede5482c4ea625f79a8ffe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e037192cadfd20ad0f1b0c54a0c770a1ba551e7d0fcb6d3708e5ba352f88ded2\",\"dweb:/ipfs/QmTXwY6odV1ToDZAYxbbLKThe9M5PUWTmWBjwT776hH4qm\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0x2c0b89cef83f353c6f9488c013d8a5968587ffdd6dfc26aad53774214b97e229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a68e662c2a82412308b1feb24f3d61a44b3b8772f44cbd440446237313c3195\",\"dweb:/ipfs/QmfBuWUE2TQef9hghDzzuVkDskw3UGAyPgLmPifTNV7K6g\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"contracts/Maketplace.sol\":{\"keccak256\":\"0xab9b3a33b0ab468511ac8d595fe6f631a7f5ba64ea98a5ade934870b498f223a\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://e72c21e5d186adf6a224e615d1d22c5265789aa7197b209ecd8828ff978fdad6\",\"dweb:/ipfs/Qmcx7WDv8M9Vth1NZMaf8K5BT83tkMyEXiFWT7pqaB4wdg\"]},\"contracts/interfaces/IToken.sol\":{\"keccak256\":\"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\",\"urls\":[\"bzz-raw://0000000000000000000000000000000000000000000000000000000000000000\",\"dweb:/ipfs/QmbFMke1KXqnYyBBWxB74N4c5SBnJMVAiMNRcGu6x1AwQH\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":141,"contract":"contracts/Maketplace.sol:Maketplace","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":144,"contract":"contracts/Maketplace.sol:Maketplace","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1144,"contract":"contracts/Maketplace.sol:Maketplace","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":10,"contract":"contracts/Maketplace.sol:Maketplace","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":130,"contract":"contracts/Maketplace.sol:Maketplace","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":324,"contract":"contracts/Maketplace.sol:Maketplace","label":"_paused","offset":0,"slot":"101","type":"t_bool"},{"astId":429,"contract":"contracts/Maketplace.sol:Maketplace","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}}}}}